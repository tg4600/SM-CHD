{------------------------------------------------------------------------------}
{  CHG          DATE    PGMR    DESCRIPTION                                    }
{------------------------------------------------------------------------------}
{**A0026        270694  LPE     Greate Job ID for Rejobs. Job_id =             }
{                               Partnumber+"/"+Bacthnumber+"RX" where X is the }
{                               number of rejobs with Batchnumber.             }
{------------------------------------------------------------------------------}
ROUTINE syntax
{**AXXXXS**J1-ROSK}
JOIN STANDARD_LIBRARY STD_DATABASE
JOIN LIBRARY $LIB_FLAGS
JOIN LIBRARY $LIB_UTILS
ENABLE WINDOWS

SET FORMAT "9999999999"

product_id = SELECT job_header. product_name
batch_name = SELECT job_header. batch_name

product_id = STRIP(product_id)
batch_name = STRIP(batch_name)

return_line = PAD(product_id:"/":batch_name," ",20)

jobid_ok = FALSE

job_re_count = 0

the_table = "JOB_HEADER"
the_field = "JOB_NAME"

push_file_descriptor ( the_table, the_field )


WHILE NOT(jobid_ok) DO

{** MIG   full_rec_id = PAD("*JOB_HEADER"," ",20):return_line

       job_exist = SELECT identvalidation.full_record_id
               WHERE full_record_id = full_rec_id
                ORDER ON full_record_id }

       job_exist = SELECT job_header.job_name
               WHERE job_name = return_line
                     order on job_name


   IF job_exist <> EMPTY THEN


       job_re_count = job_re_count + 1

       return_line = PAD(product_id:"/":batch_name:"R"
                        :STRIP(STRING(job_re_count))," ",20)

   ELSE

      SET MODE COMMITTED

      job_exist = SELECT job_header.job_name
                  WHERE job_name = return_line
                  order on job_name

      SET MODE ACTIVE

      IF job_exist <> EMPTY THEN

         job_re_count = job_re_count + 1

         return_line = PAD(product_id:"/":batch_name:"R"
                        :STRIP(STRING(job_re_count))," ",20)
      ELSE

         jobid_ok = TRUE

      ENDIF

   ENDIF

ENDWHILE

pop_file_descriptor ( the_field )

return (return_line)

{**AXXXXE**J1-ROSK}

ENDROUTINE


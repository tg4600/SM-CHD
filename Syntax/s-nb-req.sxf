{--------------------------------------------------------------------------------------}
{  CHG          DATE    PGMR    DESCRIPTION                                            }
{--------------------------------------------------------------------------------------}
{**1676         050106  HBe     Greate Sample ID for experimental Requests in ROS/AVE. }
{--------------------------------------------------------------------------------------}

JOIN STANDARD_LIBRARY STD_DATABASE
JOIN LIBRARY $SAMP_USER
JOIN LIBRARY $LIB_UTILS


ROUTINE syntax
ENABLE WINDOWS

JOIN LIBRARY $LIB_FLAGS
JOIN LIBRARY $LIB_UTILS

ENABLE WINDOWS

SET FORMAT "9999999999"


cur_job_id = SELECT sample.job_name
cur_batch  = SELECT sample.batch_name

return_line =  STRIP(cur_job_id) : "/" : STRIP(cur_batch) : "/" : STRIP(INCREMENT("WORK_REQUEST", cur_job_id))

the_table = "SAMPLE"
the_field = "ID_NUMERIC"

push_file_descriptor ( the_table, the_field )

samp_exist = EMPTY

samp_exist = SELECT sample.id_numeric
                WHERE id_text = return_line
              
{Also check for id-text in committed data}
IF samp_exist = EMPTY THEN
     samp_exist = SELECT c_sample.id_numeric
                  WHERE id_text = return_line

ENDIF

pop_file_descriptor ( the_field )

IF samp_exist <> EMPTY THEN
   FLASH_MESSAGE("ID Text: " : return_line : " already exists.", TRUE)
   
   
{If id-text exists don't dump. Create another ID text instead}

   SET FORMAT "9999999999"
 
   sample_synt = GLOBAL ( "CURRENT_LIBRARY" )
   inc_sample_synt = "/DOUBL":STRIP ( INCREMENT ( "SYNTAX", sample_synt ) )
   inc_samp_synt_val_1 = inc_sample_synt
  
   return_line = return_line : inc_samp_synt_val_1
 
   ret_value = STRIP ( return_line ) # " "
 
   WHILE ( ret_value <> return_line ) DO
           return_line = ret_value
           ret_value = return_line # " "
   ENDWHILE

   RETURN ( return_line )

   EXIT
ELSE

   return (return_line)

ENDIF

ENDROUTINE


{----------------------------------------------------------------------------------------}
{  CHG          DATE    PGMR    DESCRIPTION                                              }
{----------------------------------------------------------------------------------------}
{                                                                                        }
{                                                                                        }
{----------------------------------------------------------------------------------------}

JOIN STANDARD_LIBRARY STD_DATABASE
JOIN LIBRARY $SAMP_USER
JOIN LIBRARY $LIB_UTILS


ROUTINE syntax
ENABLE WINDOWS

JOIN LIBRARY $LIB_FLAGS
JOIN LIBRARY $LIB_UTILS

ENABLE WINDOWS

SET FORMAT "9999999999"

cur_job_id = SELECT sample.job_name

product_id = STRIP(SELECT sample.product_name)
IF (product_id = EMPTY ) OR (BLANK(product_id)) THEN
   FLASH_MESSAGE("Product name not filled in, exiting", TRUE)
   EXIT
ENDIF                   

batch_name = STRIP(SELECT sample.batch_name)
IF (batch_name = EMPTY) OR (BLANK(batch_name)) THEN
   FLASH_MESSAGE("Batch name not filled in, exiting", TRUE)
   EXIT
ENDIF

samp_pt_id = STRIP(SELECT sample.sampling_point)
IF (samp_pt_id = EMPTY) OR (BLANK(samp_pt_id)) THEN
   FLASH_MESSAGE("Sampling Point not filled in, exiting", TRUE)
   EXIT
ENDIF

counter = 1

already_there = TRUE

WHILE ((already_there) AND (counter < 1000))

   return_line = product_id:"/":batch_name:"/":samp_pt_id:"/":SUBSTITUTE(JUSTIFY(PAD(NUMBER_TO_TEXT(counter,"999" )," ",3), "RIGHT")," ", "0")

   the_table = "SAMPLE"
   the_field = "ID_NUMERIC"

   push_file_descriptor ( the_table, the_field )

   samp_exist = EMPTY

   samp_exist = SELECT sample.id_numeric
                WHERE id_text = return_line
              
{Also check for id-text in committed data}
   IF ((samp_exist = EMPTY) OR BLANK(samp_exist)) THEN
        samp_exist = SELECT c_sample.id_numeric
                     WHERE id_text = return_line

   ENDIF

   pop_file_descriptor ( the_field )

   IF ((samp_exist = EMPTY) OR BLANK(samp_exist)) THEN
      already_there = FALSE
   ENDIF   
   
   counter = counter + 1
   
ENDWHILE


RETURN (return_line)


ENDROUTINE

JOIN LIBRARY $LIB_FILTR

ROUTINE sig_figs_filter ( VALUE sig_figs,        { Number of Sig Figs       }
                          VALUE rounding_base,   { Unit Value for Rounding  }
                          VALUE decimal_places,  { Number of Decimal Places }
                          VALUE textual_result,  { Input Textual Result     }
                          VALUE numeric_result ) { Input Numeric Result     }

    DECLARE filtered_result                 { Output Result After Filtering }
    DECLARE offset_num, offset              { Local Calculation Variables   }

    { The method used to provide filtering in this routine uses the TRUNC()   }
    { function to remove the significant part of the number. It therefore     }
    { will not work when the number of significant figures is greater than 10 }

    IF ( sig_figs = 0 ) OR ( rounding_base = 0 ) OR ( sig_figs > 10 )

        filtered_result = ERROR

    ELSEIF (sig_figs < 0) THEN

        filtered_result = textual_result

    ELSE
        { Create an offset }
        offset = 10 ^ ( round( exponent ( numeric_result )) - sig_figs + 1 )

        { Divide by the offset to ensure that all digits to the left of the decimal }
        { point are significant }
        offset_num = numeric_result / offset / rounding_base

        { Separate the decimal places }
        places = offset_num - trunc ( offset_num )
        offset_num = trunc ( offset_num )

        IF offset_num >= 0 THEN
            IF places > 0.5 THEN
                offset_num = offset_num + 1
            ELSEIF ( places = 0.5 )
               AND ( offset_num / 2 <> TRUNC ( offset_num / 2 )) THEN
                offset_num = offset_num + 1
            ENDIF
        ELSE
            IF places < -0.5 THEN
                offset_num = offset_num - 1
            ELSEIF ( places = -0.5 )
               AND ( offset_num / 2 <> TRUNC ( offset_num / 2 )) THEN
                offset_num = offset_num - 1
            ENDIF
        ENDIF

        { Multiply by the offset to restore the number }
        filtered_result = offset_num * rounding_base * offset

        set_best_format ( filtered_result, sig_figs )

        gt_lt_sign = get_result_prefix( textual_result )

        filtered_result = gt_lt_sign : filtered_result

    ENDIF

    RETURN ( filtered_result )

ENDROUTINE { sig_figs_filter }

 {******************************************************************************
*
* Module Name   : $RESLSTAT
*
* Purpose       : SMP report for user defined code which is called when the
*                 status of a sample is changed
*
* Document Ref. : SE/T/TVGL-WORK-REPORTS/1/3
*
* Specification :
*
* Portability   : Not Checked
*
* Re-entrant    :
*
*******************************************************************************}
SET NOTPROTECTED

JOIN STANDARD_LIBRARY STD_DATABASE
JOIN LIBRARY $LIB_UTILS

ROUTINE set_status_a

ENDROUTINE


ROUTINE set_status_e
    out_of_range = SELECT result.out_of_range
    old_status   = SELECT result.old_status
    IF (out_of_range = "T") AND (INDEX ( " ", old_status ) <> 0 ) THEN
        CheckIncident()
    ENDIF
ENDROUTINE


ROUTINE set_status_m
    out_of_range = SELECT result.out_of_range
    old_status   = SELECT result.old_status
    IF (out_of_range = "T") AND (INDEX ( " ", old_status ) <> 0 ) THEN
        CheckIncident()
    ENDIF
ENDROUTINE


ROUTINE set_status_r

ENDROUTINE


ROUTINE set_status_u

ENDROUTINE


ROUTINE set_status_x

ENDROUTINE


{*********************************************
 * Purpose      : Checks for newly created incident
 * Parameters   : Msg - what to write in log
 * Return Value : N/A
 *********************************************}
ROUTINE CheckIncident
{2010-09-07  Create Incident update PVFL Start}
DECLARE ResName, ResText, ResUnits,
        TestNum, Analysis, TestCount,
        ResId,  SampleId, NextId,
        jobid, SQL

    NextId      = RIGHTSTRING(STRIP(INCREMENT("INCIDENT_UPDATE", "IDENTITY" )), 6)
    NextId      = STRIP(NextId)
    ResName     = SELECT result . name
    ResText     = SELECT result . text
    ResUnits    = SELECT result . units
    TestNum     = SELECT result . test_number
    SampleId    = SELECT test . sample WHERE test_number = testnum
    Analysis    = SELECT test . analysis
    TestCount   = SELECT test . test_count

    ResName     = SUBSTRING(ResName,  1, 50)
    ResText     = STRIP(ResText)
    ResUnits    = SUBSTRING(ResUnits, 1, 10)
    TestNum     = SUBSTRING(TestNum,  1, 10)
    SampleId    = SUBSTRING(SampleId, 1, 10)
    Analysis    = SUBSTRING(Analysis, 1, 10)
    TestCount   = STRIP(TestCount)

    ResId       = TestNum:ResName

    jobid   = SELECT sample . job_name WHERE id_numeric = SampleId

    SQL = "INSERT INTO INCIDENTS_UPDATE VALUES ('": NextId :"', '": jobid :"', '": SampleId :"','": TestNum :"','": Analysis :"','": TestCount :"','": TestNum:STRIP(ResName) :"','": STRIP(ResName) :"','": STRIP(ResText) :"','": ResUnits :"',(SELECT SYSDATE FROM DUAL), 'F')"
    WriteToLog(SQL)
    execute_sql ( SQL )
    execute_sql ( "commit")

    WriteToLog(SQL)
{2010-09-07  Create Incident update PVFL END}

ENDROUTINE

{*************************************************************************
* Purpose      : Writes to predefined log,
*                using WriteLog in $lib_utils
* Parameters   : Msg - what to write in log
* Return Value : N/A
**************************************************************************}
ROUTINE WriteToLog(VALUE Msg)

    WriteLog(Msg, global("current_library"))

ENDROUTINE
SET COMPILE_OPTION DECLARE
SET NOT_PROTECTED
SET NAME "DEFER/"
ENABLE WINDOWS

JOIN STANDARD_LIBRARY STD_PROMPT
JOIN STANDARD_LIBRARY STD_CLASS
JOIN STANDARD_LIBRARY STD_ARRAY
JOIN STANDARD_LIBRARY STD_ARRAY_SELECT
JOIN STANDARD_LIBRARY STD_VGL

JOIN LIBRARY $CRITERIA_EDIT
JOIN LIBRARY $LIB_UTILS
JOIN LIBRARY $STB_GLBL
JOIN LIBRARY $STB_LIB

{ Label Form Prompt Positions }

CONSTANT SECOND_COLUMN = 40

CONSTANT MESSAGE_OFFSET_FIRST  = 7
CONSTANT MESSAGE_OFFSET_SECOND = 2

CONSTANT ALL_STUDIES     = 1
CONSTANT SINGLE_STUDY    = 2
CONSTANT SINGLE_STUDY_ID = 3

CONSTANT DEFAULT_LABEL   = 4
CONSTANT LABEL_NO        = 5
CONSTANT LABEL_NO_MAN    = 6

CONSTANT SAMPLE_REP_ID  =  7
CONSTANT PULL_REP_ID    =  8

CONSTANT PRINT_LABEL    =  9
CONSTANT CLOSE_FORM     = 10

CONSTANT ALL_LAYERS     = 11
CONSTANT SINGLE_LAYER   = 12
CONSTANT SINGLE_LAYER_ID= 13

CONSTANT ALL_TIMES      = 14
CONSTANT SINGLE_TIME    = 15
CONSTANT SINGLE_TIME_ID = 16

CONSTANT ALL_CS         = 17
CONSTANT SINGLE_C       = 18
CONSTANT SINGLE_C_ID    = 19

CONSTANT ALL_PULLS      = 20
CONSTANT SINGLE_PULL    = 21
CONSTANT SINGLE_PULL_NO = 22

    stability_labels ()

EXIT

{******************************************************************************}

ROUTINE stability_labels

    DECLARE label_form

    setup_label_form ( label_form )

    label_form . start_prompt ()
    label_form . wait_prompt ()
    label_form . end_prompt ()

ENDROUTINE

{******************************************************************************}

ROUTINE setup_label_form ( label_form )

    DECLARE frame_text

    PROMPT OBJECT label_form
        CLASS PROMPT_CLASS_FORM
        WITH (  height = 15,
                width  = 80,
                row    = 5,
                column = 5,
                header = GET_USER_MESSAGE ( "STB_PRINT_LABEL_HEADER", 1 ) ,
                use_top_line = TRUE,
                button_style = FORM_BUTTON_NONE,
                return_behaviour = FORM_RETURN_STAY )


    add_label_form_prompts  ( label_form )
    add_label_form_buttons  ( label_form )
    add_label_form_displays ( label_form )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME01", 1 )
    label_form . add_frame ( frame_text, 1, 1, 2, 38 )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME02", 1 )
    label_form . add_frame ( frame_text, 1 + SECOND_COLUMN, 5, 2, 38 )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME03", 1 )
    label_form . add_frame ( frame_text, 1 + SECOND_COLUMN, 9, 2, 38 )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME04", 1 )
    label_form . add_frame ( frame_text, 1, 5, 2, 38 )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME05", 1 )
    label_form . add_frame ( frame_text, 1, 9, 2, 38 )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME06", 1 )
    label_form . add_frame ( frame_text, 1, 13, 2, 38 )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME07", 1 )
    label_form . add_frame ( frame_text, 1 + SECOND_COLUMN, 1, 2, 38 )

ENDROUTINE

{******************************************************************************}

ROUTINE add_label_form_prompts ( label_form )

    PROMPT OBJECT label_form . prompt_objects [ ALL_STUDIES ]
        ON LINE 1
        FROM    14
        BROWSE ON BOOLEAN
        WITH (  value           = TRUE            ,
                is_radio        = TRUE            ,
                userinfo        = ALL_STUDIES     ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_STUDY ]
        ON LINE 2
        FROM    14
        BROWSE ON BOOLEAN
        WITH (  value           = FALSE           ,
                is_radio        = TRUE            ,
                userinfo        = SINGLE_STUDY    ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_STUDY_ID ]
                ON LINE 2
                FROM    18 TO 34
                BROWSE ON pds_study
                WITH (  value                = ""                      ,
                        userinfo             = SINGLE_STUDY_ID         ,
                        enabled              = FALSE                   ,
                        leave_prompt_routine = "update_factor_prompts" )

    PROMPT OBJECT label_form . prompt_objects [ DEFAULT_LABEL ]
        ON LINE 5
        FROM    14 + SECOND_COLUMN + MESSAGE_OFFSET_SECOND
        BROWSE ON BOOLEAN
        WITH (  value           = TRUE            ,
                is_radio        = TRUE            ,
                userinfo        = DEFAULT_LABEL   ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ LABEL_NO ]
        ON LINE 6
        FROM    14 + SECOND_COLUMN + MESSAGE_OFFSET_SECOND
        BROWSE ON BOOLEAN
        WITH (  value           = FALSE           ,
                is_radio        = TRUE            ,
                userinfo        = LABEL_NO        ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ LABEL_NO_MAN ]
                ON LINE 6
                FROM    18 + SECOND_COLUMN + MESSAGE_OFFSET_SECOND
                BROWSE ON integer
                WITH (  value        = ""              ,
                        userinfo     = LABEL_NO_MAN    ,
                        enabled      = FALSE           ,
                        minimum      = 0               ,
                        maximum      = 10              )

    PROMPT OBJECT label_form . prompt_objects [ SAMPLE_REP_ID ]
                ON LINE 9
                FROM    14 + SECOND_COLUMN + MESSAGE_OFFSET_SECOND
                BROWSE ON report
                WITH (  value        = DEFAULT_SAMP_LIB,
                        userinfo     = LABEL_NO_MAN    )

    PROMPT OBJECT label_form . prompt_objects [ PULL_REP_ID ]
                ON LINE 10
                FROM    14 + SECOND_COLUMN + MESSAGE_OFFSET_SECOND
                BROWSE ON report
                WITH (  value        = DEFAULT_PULL_LIB,
                        userinfo     = LABEL_NO_MAN    )

    PROMPT OBJECT label_form . prompt_objects [ ALL_LAYERS ]
        ON LINE 5
        FROM    14 + MESSAGE_OFFSET_FIRST
        BROWSE ON BOOLEAN
        WITH (  value           = TRUE            ,
                is_radio        = TRUE            ,
                userinfo        = ALL_LAYERS      ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_LAYER ]
        ON LINE 6
        FROM    14 + MESSAGE_OFFSET_FIRST
        BROWSE ON BOOLEAN
        WITH (  value           = FALSE           ,
                is_radio        = TRUE            ,
                userinfo        = SINGLE_LAYER    ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_LAYER_ID ]
                ON LINE 6
                FROM    18 + MESSAGE_OFFSET_FIRST TO 34 + MESSAGE_OFFSET_FIRST
                BROWSE ON layer_factor
                WITH (  value        = ""                      ,
                        userinfo     = SINGLE_LAYER_ID         ,
                        enabled      = FALSE                   )

    PROMPT OBJECT label_form . prompt_objects [ ALL_TIMES ]
        ON LINE 9
        FROM    14 + MESSAGE_OFFSET_FIRST
        BROWSE ON BOOLEAN
        WITH (  value           = TRUE            ,
                is_radio        = TRUE            ,
                userinfo        = ALL_TIMES     ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_TIME ]
        ON LINE 10
        FROM    14 + MESSAGE_OFFSET_FIRST
        BROWSE ON BOOLEAN
        WITH (  value           = FALSE           ,
                is_radio        = TRUE            ,
                userinfo        = SINGLE_TIME     ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_TIME_ID ]
                ON LINE 10
                FROM    18 + MESSAGE_OFFSET_FIRST TO 34 + MESSAGE_OFFSET_FIRST
                BROWSE ON time_factor
                WITH (  value        = ""              ,
                        userinfo     = SINGLE_TIME_ID  ,
                        enabled      = FALSE           )

    PROMPT OBJECT label_form . prompt_objects [ ALL_CS ]
        ON LINE 13
        FROM    14 + MESSAGE_OFFSET_FIRST
        BROWSE ON BOOLEAN
        WITH (  value           = TRUE            ,
                is_radio        = TRUE            ,
                userinfo        = ALL_CS          ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_C ]
        ON LINE 14
        FROM    14 + MESSAGE_OFFSET_FIRST
        BROWSE ON BOOLEAN
        WITH (  value           = FALSE           ,
                is_radio        = TRUE            ,
                userinfo        = SINGLE_C        ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_C_ID ]
                ON LINE 14
                FROM    18 + MESSAGE_OFFSET_FIRST TO 34 + MESSAGE_OFFSET_FIRST
                BROWSE ON c_factor
                WITH (  value        = ""              ,
                        userinfo     = SINGLE_C_ID     ,
                        enabled      = FALSE           )

    PROMPT OBJECT label_form . prompt_objects [ ALL_PULLS ]
        ON LINE 1
        FROM    14 + MESSAGE_OFFSET_SECOND + SECOND_COLUMN
        BROWSE ON BOOLEAN
        WITH (  value           = TRUE            ,
                is_radio        = TRUE            ,
                userinfo        = ALL_PULLS       ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_PULL ]
        ON LINE 2
        FROM    14 + MESSAGE_OFFSET_SECOND + SECOND_COLUMN
        BROWSE ON BOOLEAN
        WITH (  value           = FALSE           ,
                is_radio        = TRUE            ,
                userinfo        = SINGLE_PULL     ,
                toggled_routine = "toggle_state"  )

    PROMPT OBJECT label_form . prompt_objects [ SINGLE_PULL_NO ]
        ON LINE 2
        FROM    18 + MESSAGE_OFFSET_SECOND + SECOND_COLUMN TO 34 + MESSAGE_OFFSET_SECOND + SECOND_COLUMN
        BROWSE ON INTEGER
        WITH (  value        = ""                ,
                userinfo     = SINGLE_PULL_NO    ,
                enabled      = FALSE             ,
                minimum      = 0                 ,
                maximum      = MAX_PULLS_IN_CELL )

ENDROUTINE

{******************************************************************************}

ROUTINE add_label_form_buttons ( label_form )

    PROMPT OBJECT label_form . prompt_objects [ PRINT_LABEL ]
        CLASS "STD_PROMPT_BUTTON"
        WITH ( caption      = GET_USER_MESSAGE ( "STB_PRINT_LABEL_CAPTION01", 1 ) ,
               row          = label_form . height - 2,
               width        = 10,
               column       = label_form . width - 24,
               mouse_click_routine = "print_labels" )

    PROMPT OBJECT label_form . prompt_objects [ CLOSE_FORM ]
        CLASS "STD_PROMPT_BUTTON"
        WITH ( caption      = GET_USER_MESSAGE ( "STB_PRINT_LABEL_CAPTION02", 1 ) ,
               row          = label_form . height - 2,
               width        = 10,
               column       = label_form . width - 12,
               send_lastkey = "EXIT" )

ENDROUTINE

{******************************************************************************}

ROUTINE add_label_form_displays ( label_form )

    DECLARE disp_txt, rendition

    rendition = PROMPT_RENDITION_NORMAL

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP01", 1 )
    label_form . add_display ( disp_txt , 2, 1 , rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP02", 1 )
    label_form . add_display ( disp_txt , 2, 2 , rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP03", 1 )
    label_form . add_display ( disp_txt , 2 + SECOND_COLUMN, 5, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP04", 1 )
    label_form . add_display ( disp_txt , 2 + SECOND_COLUMN, 6, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP05", 1 )
    label_form . add_display ( disp_txt , 2 + SECOND_COLUMN, 9, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP06", 1 )
    label_form . add_display ( disp_txt , 2 + SECOND_COLUMN, 10, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP07", 1 )
    label_form . add_display ( disp_txt , 2, 5, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP08", 1 )
    label_form . add_display ( disp_txt , 2, 6, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP09", 1 )
    label_form . add_display ( disp_txt , 2, 9, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP10", 1 )
    label_form . add_display ( disp_txt , 2, 10, rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP11", 1 )
    label_form . add_display ( disp_txt , 2, 13 , rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP12", 1 )
    label_form . add_display ( disp_txt , 2, 14 , rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP13", 1 )
    label_form . add_display ( disp_txt , 2 + SECOND_COLUMN, 1 , rendition )

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP14", 1 )
    label_form . add_display ( disp_txt , 2 + SECOND_COLUMN, 2 , rendition )

ENDROUTINE

{******************************************************************************}

ROUTINE toggle_state ( self )

    DECLARE label_form, prompt_val

    label_form = self . parent_prompt
    prompt_val = self . value

    IF ( self . userinfo = ALL_STUDIES ) THEN

        label_form . prompt_objects [ ALL_STUDIES  ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_STUDY ] . set_text ( NOT ( prompt_val ) )

        get_browse_list ( label_form . prompt_objects [ SINGLE_LAYER_ID ], "Z" )
        get_browse_list ( label_form . prompt_objects [ SINGLE_TIME_ID ] , "T" )
        get_browse_list ( label_form . prompt_objects [ SINGLE_C_ID ]    , "C" )

        label_form . prompt_objects [ SINGLE_STUDY_ID ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = SINGLE_STUDY ) THEN

        label_form . prompt_objects [ ALL_STUDIES  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_STUDY ] . set_text ( prompt_val )

        get_browse_list ( label_form . prompt_objects [ SINGLE_LAYER_ID ], "Z" )
        get_browse_list ( label_form . prompt_objects [ SINGLE_TIME_ID ] , "T" )
        get_browse_list ( label_form . prompt_objects [ SINGLE_C_ID ]    , "C" )

        label_form . prompt_objects [ SINGLE_STUDY_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_STUDY_ID ) THEN

        label_form . prompt_objects [ ALL_STUDIES  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_STUDY ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_STUDY_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = DEFAULT_LABEL ) THEN

        label_form . prompt_objects [ DEFAULT_LABEL  ] . set_text ( prompt_val )
        label_form . prompt_objects [ LABEL_NO       ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ LABEL_NO_MAN   ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = LABEL_NO ) THEN

        label_form . prompt_objects [ DEFAULT_LABEL ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ LABEL_NO      ] . set_text ( prompt_val )
        label_form . prompt_objects [ LABEL_NO_MAN  ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = LABEL_NO_MAN ) THEN

        label_form . prompt_objects [ DEFAULT_LABEL ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ LABEL_NO      ] . set_text ( prompt_val )
        label_form . prompt_objects [ LABEL_NO_MAN  ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = ALL_LAYERS ) THEN

        label_form . prompt_objects [ ALL_LAYERS  ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_LAYER ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_LAYER_ID ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = SINGLE_LAYER ) THEN

        label_form . prompt_objects [ ALL_LAYERS  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_LAYER ] . set_text ( prompt_val )

        get_browse_list ( label_form . prompt_objects [ SINGLE_LAYER_ID ], "Z" )

        label_form . prompt_objects [ SINGLE_LAYER_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_LAYER_ID ) THEN

        label_form . prompt_objects [ ALL_LAYERS  ]     . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_LAYER ]    . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_LAYER_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = ALL_TIMES ) THEN

        label_form . prompt_objects [ ALL_TIMES  ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_TIME ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_TIME_ID ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = SINGLE_TIME ) THEN

        label_form . prompt_objects [ ALL_TIMES  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_TIME ] . set_text ( prompt_val )

        get_browse_list ( label_form . prompt_objects [ SINGLE_TIME_ID ], "T" )

        label_form . prompt_objects [ SINGLE_TIME_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_TIME_ID ) THEN

        label_form . prompt_objects [ ALL_TIMES  ]     . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_TIME ]    . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_TIME_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = ALL_CS ) THEN

        label_form . prompt_objects [ ALL_CS  ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_C ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_C_ID ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = SINGLE_C ) THEN

        label_form . prompt_objects [ ALL_CS  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_C ] . set_text ( prompt_val )

        get_browse_list ( label_form . prompt_objects [ SINGLE_C_ID ], "C" )

        label_form . prompt_objects [ SINGLE_C_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_C_ID ) THEN

        label_form . prompt_objects [ ALL_CS  ]     . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_C ]    . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_C_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = ALL_PULLS ) THEN

        label_form . prompt_objects [ ALL_PULLS  ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_PULL ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_PULL_NO ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = SINGLE_PULL ) THEN

        label_form . prompt_objects [ ALL_PULLS  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_PULL ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_PULL_NO ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_PULL_NO ) THEN

        label_form . prompt_objects [ ALL_PULLS  ]     . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_PULL ]    . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_PULL_NO ] . set_enabled ( TRUE )

    ENDIF

ENDROUTINE

{******************************************************************************}

ROUTINE update_factor_prompts ( self )

    DECLARE label_form

    label_form = self . parent_prompt

    get_browse_list ( label_form . prompt_objects [ SINGLE_LAYER_ID ], "Z" )
    get_browse_list ( label_form . prompt_objects [ SINGLE_TIME_ID ] , "T" )
    get_browse_list ( label_form . prompt_objects [ SINGLE_C_ID ]    , "C" )

ENDROUTINE

{******************************************************************************}

ROUTINE validate_form ( label_form )

    IF ( ( label_form . prompt_objects [ SINGLE_STUDY_ID ] . text = "" ) AND
         ( label_form . prompt_objects [ SINGLE_STUDY_ID ] . enabled    ) ) THEN

        flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR01", 1 ) , TRUE )
        RETURN ( FALSE )

    ENDIF

    RETURN ( TRUE )

ENDROUTINE

{******************************************************************************}

ROUTINE print_labels ( self )

    DECLARE selected_pulls, selection_crit, label_form, count, no_labels,
            label_count, sample_id, header_id, layer_id, time_id, c_id,
            pull_num, pull_status, label_printed, samp_report_id, pull_report_id,
            label_routine

    label_form = self . parent_prompt
    label_printed = FALSE

                                       { ==================================== }
                                       { study and factor validation          }
                                       { ==================================== }

    IF ( check_factors_entered ( label_form ) ) THEN
        RETURN ( FALSE )
    ENDIF

                                       { ==================================== }
                                       { library and routine validation       }
                                       { ==================================== }

    samp_report_id = SELECT report . identity
                      WHERE identity = label_form . prompt_objects [ SAMPLE_REP_ID ] . value

    IF ( samp_report_id = EMPTY ) THEN

        flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR02", 1 ) , TRUE )
        RETURN ( FALSE )

    ELSE

        label_routine = DEFAULT_SAMP_ROUT
        IF NOT ( vgl_validate_routine ( samp_report_id, label_routine ) ) THEN
            flash_message ( STRIP ( samp_report_id ) : GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR03", 1 ) , TRUE )
            RETURN ( FALSE )
        ENDIF

    ENDIF

    pull_report_id = SELECT report . identity
                      WHERE identity = label_form . prompt_objects [ PULL_REP_ID ] . value

    IF ( pull_report_id = EMPTY ) THEN

        flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR04", 1 ) , TRUE )
        RETURN ( FALSE )

    ELSE

        label_routine = DEFAULT_PULL_ROUT
        IF NOT ( vgl_validate_routine ( pull_report_id, label_routine ) ) THEN
            flash_message ( STRIP ( pull_report_id ) : GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR05", 1 ) , TRUE )
            RETURN ( FALSE )
        ENDIF

    ENDIF

    IF ( validate_form ( label_form ) ) THEN

        CREATE OBJECT "STD_OBJECT_DATABASE", selected_pulls

        get_pull_select_criteria ( label_form, selection_crit )

        selected_pulls . initialise ( "PDS_STUDY_PULL" )
        selected_pulls . select_for_read ( selection_crit )

        count = 0
        WHILE ( count < selected_pulls . size () ) DO

            count = count + 1
            selected_pulls . set_by_number ( count )

            IF label_form . prompt_objects [ DEFAULT_LABEL ] . value THEN
                no_labels = SELECT pds_study_pull . label_number IN OBJECT selected_pulls . current
            ELSE
                no_labels = label_form . prompt_objects [ LABEL_NO_MAN ] . value
            ENDIF

            label_count = 0
            WHILE ( label_count < no_labels ) DO

                label_count = label_count + 1

                pull_status = SELECT pds_study_pull . cell_disp IN OBJECT selected_pulls . current

                label_printed = TRUE

                IF pull_status = "V" THEN

                    sample_id = SELECT pds_study_pull . created_sample_id IN OBJECT selected_pulls . current

                    CALL_ROUTINE DEFAULT_SAMP_ROUT
                        IN LIBRARY label_form . prompt_objects [ SAMPLE_REP_ID ] . value
                        USING sample_id

                ELSE

                    header_id = SELECT pds_study_pull . header       IN OBJECT selected_pulls . current
                    layer_id  = SELECT pds_study_pull . layer_factor IN OBJECT selected_pulls . current
                    time_id   = SELECT pds_study_pull . time_factor  IN OBJECT selected_pulls . current
                    c_id      = SELECT pds_study_pull . c_factor     IN OBJECT selected_pulls . current
                    pull_num  = SELECT pds_study_pull . pull_num     IN OBJECT selected_pulls . current

                    CALL_ROUTINE DEFAULT_PULL_ROUT
                        IN LIBRARY label_form . prompt_objects [ PULL_REP_ID ] . value
                        USING header_id,
                              layer_id ,
                              time_id  ,
                              c_id     ,
                              pull_num

                ENDIF

            ENDWHILE

        ENDWHILE

        IF label_printed THEN
            FLUSH_LITERAL
        ELSE
            flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR06", 1 ) , TRUE )
        ENDIF

    ENDIF

ENDROUTINE

{******************************************************************************}

ROUTINE get_browse_list ( self, VALUE factor_type )

    DECLARE label_form, study_id, factor_array

    ARRAY factor_array

    label_form = self . parent_prompt

    IF ( label_form . prompt_objects [ SINGLE_STUDY ] . value ) THEN

        ARRAY self . select_array

        study_id = label_form . prompt_objects [ SINGLE_STUDY_ID ] . value

        get_factor_array   ( study_id    , factor_type, factor_array )
        setup_select_array ( factor_array, self . select_array )

    ELSE

        ARRAY self . select_array
        array_select_add ( self . select_array, ARRAY_SELECT_NE, "IDENTITY", EMPTY )

    ENDIF

    IF ( ( self . enabled ) AND ( self . value <> "" ) ) THEN
        self . set_text ( "" )
        self . stop_prompt ()
        self . start_prompt ()
    ENDIF

ENDROUTINE

{******************************************************************************}

ROUTINE get_factor_array ( VALUE study_id     ,
                           VALUE factor_type  ,
                                 factor_array )

    DECLARE factor_id, count

    count = 0

    factor_id = SELECT pds_axis_point . axis_point_name
                 WHERE ( matrix_type = "S"  )
                   AND ( axis_type = factor_type)
                   AND ( header = study_id )

    WHILE ( factor_id <> EMPTY ) DO

        count = count + 1

        factor_array [ count ] = factor_id

        NEXT pds_axis_point
        factor_id = SELECT pds_axis_point . axis_point_name

    ENDWHILE

ENDROUTINE

{******************************************************************************}

ROUTINE setup_select_array ( factor_array, select_array )

    DECLARE count

    count = 1

    IF ( size_of_array ( factor_array ) = 1 ) THEN

        ARRAY select_array

        array_select_add ( select_array, ARRAY_SELECT_EQ, "IDENTITY", factor_array [ count ] )

    ELSE

        ARRAY select_array

        array_select_add ( select_array, ARRAY_SELECT_EQ, "IDENTITY", factor_array [ count ] )
        WHILE ( count < size_of_array ( factor_array ) ) DO
            count = count + 1
            array_select_add ( select_array, ARRAY_SELECT_OR, EMPTY, EMPTY )
            array_select_add ( select_array, ARRAY_SELECT_EQ, "IDENTITY", factor_array [ count ] )
        ENDWHILE

    ENDIF

ENDROUTINE

{******************************************************************************}

ROUTINE get_pull_select_criteria ( label_form, selection_crit )

    DECLARE study_id, layer_id, time_id, c_id, pull_num

    ARRAY selection_crit

    IF ( label_form . prompt_objects [ SINGLE_STUDY ] . value ) THEN
        study_id = label_form . prompt_objects [ SINGLE_STUDY_ID ] . value
        array_select_add ( selection_crit, ARRAY_SELECT_EQ, "HEADER", study_id )
    ELSE
        array_select_add ( selection_crit, ARRAY_SELECT_NE, "HEADER", EMPTY )
    ENDIF

    IF ( label_form . prompt_objects [ SINGLE_LAYER ] . value ) THEN
        layer_id = label_form . prompt_objects [ SINGLE_LAYER_ID ] . value
        array_select_add ( selection_crit, ARRAY_SELECT_EQ, "LAYER_FACTOR", layer_id )
    ELSE
        array_select_add ( selection_crit, ARRAY_SELECT_NE, "LAYER_FACTOR", EMPTY )
    ENDIF

    IF ( label_form . prompt_objects [ SINGLE_TIME ] . value ) THEN
        time_id = label_form . prompt_objects [ SINGLE_TIME_ID ] . value
        array_select_add ( selection_crit, ARRAY_SELECT_EQ, "TIME_FACTOR", time_id )
    ELSE
        array_select_add ( selection_crit, ARRAY_SELECT_NE, "TIME_FACTOR", EMPTY )
    ENDIF

    IF ( label_form . prompt_objects [ SINGLE_C ] . value ) THEN
        c_id = label_form . prompt_objects [ SINGLE_C_ID ] . value
        array_select_add ( selection_crit, ARRAY_SELECT_EQ, "C_FACTOR", c_id )
    ELSE
        array_select_add ( selection_crit, ARRAY_SELECT_NE, "C_FACTOR", EMPTY )
    ENDIF

    IF ( label_form . prompt_objects [ SINGLE_PULL ] . value ) THEN
        pull_num = label_form . prompt_objects [ SINGLE_PULL_NO ] . value
        array_select_add ( selection_crit, ARRAY_SELECT_EQ, "PULL_NUM", pull_num )
    ENDIF

ENDROUTINE

ROUTINE check_factors_entered ( label_form )
{<???>}
    IF ( ( label_form . prompt_objects [ SINGLE_STUDY ] . value ) AND ( label_form . prompt_objects [ SINGLE_STUDY_ID ] . value = "" ) ) THEN
        flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR07", 1 ) , TRUE )
        RETURN ( TRUE )
    ENDIF

    IF ( ( label_form . prompt_objects [ SINGLE_LAYER ] . value ) AND ( label_form . prompt_objects [ SINGLE_LAYER_ID ] . value = "" ) ) THEN
        flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR08", 1 ) , TRUE )
        RETURN ( TRUE )
    ENDIF

    IF ( ( label_form . prompt_objects [ SINGLE_TIME ] . value ) AND ( label_form . prompt_objects [ SINGLE_TIME_ID ] . value = "" ) ) THEN
        flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR09", 1 ) , TRUE )
        RETURN ( TRUE )
    ENDIF

    IF ( ( label_form . prompt_objects [ SINGLE_C ] . value ) AND ( label_form . prompt_objects [ SINGLE_C_ID ] . value = "" ) ) THEN
        flash_message ( GET_USER_MESSAGE ( "STB_PRINT_LABEL_ERR10", 1 ) , TRUE )
        RETURN ( TRUE )
    ENDIF

    RETURN ( FALSE )

ENDROUTINE

{******************************************************************************}

ROUTINE stb_matrix_action_option_sample_label ( self )
{
* 
*
* Parameters : self, Stb Matrix object
*
*******************************************************************************}

	DECLARE pull_record

	IF self . can_sample_label( ) THEN

		pull_record = self . get_current_pull( )

		self . print_pull_sample_label( pull_record )

	ENDIF

ENDROUTINE

{******************************************************************************}

ROUTINE stb_matrix_action_print_pull_sample_label ( self, pull_record )
{
* Invoke print pull label screen and print passed pull record
*
* Parameters : self        , Stb Matrix object
*              pull_record , the pull record to print label of
*
*******************************************************************************}
    
    DECLARE single_label_form, label_routine, sample_id, header_id
    DECLARE layer_id, time_id, c_id, pull_num
	DECLARE no_labels, label_count, report_id
	
    setup_single_label_form ( single_label_form, self )

    single_label_form . start_prompt ()
    single_label_form . wait_prompt ()
    single_label_form . end_prompt ()

    IF single_label_form . get_lastkey () = "DO" THEN
      
        IF single_label_form . prompt_objects [ 1 ] . value THEN
        
            no_labels = SELECT pds_study_pull . label_number
                            IN OBJECT pull_record
            
        ELSE
        
            no_labels = single_label_form . prompt_objects [ 3 ] . value
            
        ENDIF

        SET NAME "DEFER/"

        report_id = SELECT report . identity
                     WHERE identity = single_label_form . prompt_objects [ 4 ] . value

        IF ( report_id <> EMPTY ) THEN

            label_count = 0
            WHILE ( label_count < no_labels ) DO
                label_count = label_count + 1

                IF NOT self . pull_is_pending( pull_record ) THEN

                    label_routine = DEFAULT_SAMP_ROUT
                    sample_id = SELECT pds_study_pull . created_sample_id
                                    IN OBJECT pull_record

                    IF vgl_validate_routine ( single_label_form . prompt_objects [ 4 ] . value,
                                              label_routine                                   ) THEN

                        CALL_ROUTINE label_routine
                            USING sample_id
                            IN LIBRARY single_label_form . prompt_objects [ 4 ] . value

                    ELSE

                        flash_message ( GET_USER_MESSAGE ( "PRINT_LABEL_ERR", 2 ), TRUE )

                    ENDIF

                ELSE

                    label_routine = DEFAULT_PULL_ROUT

                    header_id = SELECT pds_study_pull . header       IN OBJECT pull_record
                    layer_id  = SELECT pds_study_pull . layer_factor IN OBJECT pull_record
                    time_id   = SELECT pds_study_pull . time_factor  IN OBJECT pull_record
                    c_id      = SELECT pds_study_pull . c_factor     IN OBJECT pull_record
                    pull_num  = SELECT pds_study_pull . pull_num     IN OBJECT pull_record

                    IF vgl_validate_routine ( single_label_form . prompt_objects [ 4 ] . value,
                                              label_routine                                   ) THEN

                        CALL_ROUTINE label_routine
                            IN LIBRARY single_label_form . prompt_objects [ 4 ] . value
                            USING header_id,
                                  layer_id ,
                                  time_id  ,
                                  c_id     ,
                                  pull_num

                    ELSE

                        flash_message ( GET_USER_MESSAGE ( "PRINT_LABEL_ERR", 2 ), TRUE )

                    ENDIF

                ENDIF

            ENDWHILE

        ELSE

            flash_message ( GET_USER_MESSAGE ( "PRINT_LABEL_ERR", 3 ), TRUE )

        ENDIF

        FLUSH_LITERAL

    ENDIF

ENDROUTINE

{******************************************************************************}

ROUTINE setup_single_label_form ( single_label_form, matrix_object )

    DECLARE frame_text, pull_record , is_sample

    pull_record = matrix_object . get_current_pull( )
  
    is_sample = NOT matrix_object . pull_is_pending( pull_record )

    PROMPT OBJECT single_label_form
        CLASS PROMPT_CLASS_FORM
        WITH (  height = 6,
                width  = 40,
                row    = 5,
                column = 5,
                header = GET_USER_MESSAGE ( "STB_PRINT_LABEL_SINGLE_HEADER", 1 ) ,
                use_top_line = TRUE,
                button_style = FORM_BUTTON_OK_CANCEL,
                return_behaviour = FORM_RETURN_STAY )

    add_single_label_form_prompts  ( single_label_form, is_sample)
    add_single_label_form_displays ( single_label_form )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME07", 1 )
    single_label_form . add_frame ( frame_text, 1, 1, 2, 38 )

    frame_text = GET_USER_MESSAGE ( "STB_PRINT_LABEL_FRAME08", 1 )
    single_label_form . add_frame ( frame_text, 1, 5, 1, 38 )

ENDROUTINE

{******************************************************************************}

ROUTINE add_single_label_form_prompts ( label_form, VALUE is_sample )

    DECLARE default_report

    PROMPT OBJECT label_form . prompt_objects [ 1 ]
        ON LINE 1
        FROM    2
        BROWSE ON BOOLEAN
        WITH (  value           = TRUE            ,
                is_radio        = TRUE            ,
                userinfo        = 1               ,
                toggled_routine = "toggle_single_state" ,
                caption         = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP15", 1 ))

    PROMPT OBJECT label_form . prompt_objects [ 2 ]
        ON LINE 2
        FROM    2
        BROWSE ON BOOLEAN
        WITH (  value           = FALSE           ,
                is_radio        = TRUE            ,
                userinfo        = 2               ,
                toggled_routine = "toggle_single_state" ,
                caption         = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP16", 1 ))

    PROMPT OBJECT label_form . prompt_objects [ 3 ]
                ON LINE 2
                FROM    19
                BROWSE ON integer
                WITH (  value        = ""              ,
                        userinfo     = 3               ,
                        enabled      = FALSE           ,
                        minimum      = 0               ,
                        maximum      = 10              )

    IF is_sample THEN
        default_report = DEFAULT_SAMP_LIB
    ELSE
        default_report = DEFAULT_PULL_LIB
    ENDIF

    PROMPT OBJECT label_form . prompt_objects [ 4 ]
                ON LINE 5
                FROM    15
                BROWSE ON report
                WITH (  value        = default_report  ,
                        userinfo     = LABEL_NO_MAN    )

ENDROUTINE

{******************************************************************************}

ROUTINE add_single_label_form_displays ( label_form )

    DECLARE disp_txt

    disp_txt = GET_USER_MESSAGE ( "STB_PRINT_LABEL_DISP17", 1 )
    label_form . add_display ( disp_txt , 2, 5, PROMPT_RENDITION_NORMAL )

ENDROUTINE

{******************************************************************************}

ROUTINE toggle_single_state ( self )

    DECLARE label_form, prompt_val

    label_form = self . parent_prompt
    prompt_val = self . value

    IF ( self . userinfo = ALL_STUDIES ) THEN

        label_form . prompt_objects [ ALL_STUDIES  ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_STUDY ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_STUDY_ID ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = SINGLE_STUDY ) THEN

        label_form . prompt_objects [ ALL_STUDIES  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_STUDY ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_STUDY_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_STUDY_ID ) THEN

        label_form . prompt_objects [ ALL_STUDIES  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_STUDY ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_STUDY_ID ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = DEFAULT_LABEL ) THEN

        label_form . prompt_objects [ DEFAULT_LABEL  ] . set_text ( prompt_val )
        label_form . prompt_objects [ LABEL_NO       ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ LABEL_NO_MAN   ] . set_enabled ( FALSE )

    ELSEIF ( self . userinfo = LABEL_NO ) THEN

        label_form . prompt_objects [ DEFAULT_LABEL ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ LABEL_NO      ] . set_text ( prompt_val )
        label_form . prompt_objects [ LABEL_NO_MAN  ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = LABEL_NO_MAN ) THEN

        label_form . prompt_objects [ DEFAULT_LABEL ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ LABEL_NO      ] . set_text ( prompt_val )
        label_form . prompt_objects [ LABEL_NO_MAN  ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_PULL ) THEN

        label_form . prompt_objects [ ALL_PULLS  ] . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_PULL ] . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_PULL_NO ] . set_enabled ( TRUE )

    ELSEIF ( self . userinfo = SINGLE_PULL_NO ) THEN

        label_form . prompt_objects [ ALL_PULLS  ]     . set_text ( NOT ( prompt_val ) )
        label_form . prompt_objects [ SINGLE_PULL ]    . set_text ( prompt_val )
        label_form . prompt_objects [ SINGLE_PULL_NO ] . set_enabled ( TRUE )

    ENDIF

ENDROUTINE

{==============================================================================}
{                                                                              }
{  TENSOR TECHNOLOGIES                                                         }
{                                                                              }
{  Filename         : $STB_GLBL                                                }
{  Version          : 1.0                                                      }
{  Document Ref.    :                                                          }
{  Author           : John o' Gorman                                           }
{  Date Created     : 20-5-97                                                  }
{  Responsible      : TTL                                                      }
{  Description      : contains the globals and user files for configuration    }
{                     of this system.                                          }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Passed Parameters            Value           Description                    }
{  -----------------            -----           -----------                    }
{                                                                              }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Libraries Used           Routine             Description                    }
{  --------------           -------             -----------                    }
{                                                                              }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Modification History                                                        }
{                                                                              }
{  Ver.     Date        By          Description                                }
{  ----     ----        --          -----------                                }
{  1.0      20-5-97     JOG         created                                    }
{                                                                              }
{==============================================================================}
{  1.0      5-9-97      HAB         Modified to include global constants for   }
{                                   defining the default job template to use   }
{                                   and default study activation values.       }
{                                                                              }
{==============================================================================}

SET COMPILE_OPTION DECLARE

JOIN STANDARD_LIBRARY STD_ARRAY

GLOBAL CONSTANT DEFAULT_SAMP_TEMP   = "STABSMTMPT"
GLOBAL CONSTANT DEFAULT_SAMP_SYNTAX = "DEFAULT"

{ Default job template }

GLOBAL CONSTANT STAB_DEFAULT_JOB_TEMPLATE   = "STABJBTMPL"

{ Constants used when activating a study from the study LTE   }
{ and the global config item is set to interactive activation }

GLOBAL CONSTANT INT_ACT_LOGIN_SAMPLES       = FALSE
GLOBAL CONSTANT INT_ACT_PROCESS_ALL_STUDIES = FALSE
GLOBAL CONSTANT INT_ACT_PROCESS_ALL_PULLS   = TRUE

{ Constants used when activating a study from the study LTE  }
{ and the global config item is set to background activation }

GLOBAL CONSTANT BGD_ACT_LOGIN_SAMPLES       = FALSE
GLOBAL CONSTANT BGD_ACT_PROCESS_ALL_STUDIES = FALSE
GLOBAL CONSTANT BGD_ACT_PROCESS_ALL_PULLS   = TRUE

{ maximum pulls that can be put in a cell }
GLOBAL CONSTANT MAX_PULLS_IN_CELL = 49

GLOBAL CONSTANT PULL_FIELD_NAME         = 1
GLOBAL CONSTANT PULL_FIELD_DESC         = 2
GLOBAL CONSTANT PULL_FIELD_TYPE         = 3
GLOBAL CONSTANT PULL_FIELD_BROWSE       = 4
GLOBAL CONSTANT PULL_FIELD_MIN          = 6
GLOBAL CONSTANT PULL_FIELD_MAX          = 7
GLOBAL CONSTANT PULL_FIELD_DISPLAY      = 8
GLOBAL CONSTANT PULL_FIELD_WIDTH        = 9
GLOBAL CONSTANT PULL_FIELD_LENGTH       = 10
GLOBAL CONSTANT ROUTINE_NAME            = 11
GLOBAL CONSTANT LIBRARY_NAME            = 12
GLOBAL CONSTANT STB_DEFAULT_VALUE       = 15

GLOBAL CONSTANT STB_PROMPT_TYPE_PHRASE    = 1
GLOBAL CONSTANT STB_PROMPT_TYPE_TABLE     = 2
GLOBAL CONSTANT STB_PROMPT_TYPE_INTEGER   = 3
GLOBAL CONSTANT STB_PROMPT_TYPE_TEXT      = 4
GLOBAL CONSTANT STB_PROMPT_TYPE_FUNCTION  = 5
GLOBAL CONSTANT STB_PROMPT_TYPE_DATE      = 6
GLOBAL CONSTANT STB_PROMPT_TYPE_CUSTOM    = 7

GLOBAL CONSTANT LABEL_MAXIMUM_COPIES = 10
GLOBAL CONSTANT LABEL_DEFAULT_REPORT = "$STB_LABEL"

{ Menu procedures for standard SM menu options }

GLOBAL CONSTANT MENU_OPTION_AUTHORISE_SAMPLE    = 11
GLOBAL CONSTANT MENU_OPTION_CANCEL_SAMPLE       = 186
GLOBAL CONSTANT MENU_OPTION_RESULT_ENTRY_SAMPLE = 247
GLOBAL CONSTANT MENU_OPTION_RECEIVE_SAMPLE      = 182
GLOBAL CONSTANT MENU_OPTION_RUN_REPORT          = 56

{ Default Form Reports }

GLOBAL CONSTANT DEFAULT_SAMP_LIB = "$STB_SAMP_LABL"
GLOBAL CONSTANT DEFAULT_PULL_LIB = "$STB_PULL_LABL"

GLOBAL CONSTANT DEFAULT_SAMP_ROUT = "print_samp_label"
GLOBAL CONSTANT DEFAULT_PULL_ROUT = "print_pull_label"

{*****************************************************************************}

ROUTINE modify_prompt_pull_qty_unit( matrix_object )

{
* Creates a prompt to allow the pull amount and unit to be modified
*
* Parameters : None
*
******************************************************************************}

    DECLARE prompt_object, display_only

    display_only = BLANK( matrix_object . get_product( ) )

    PROMPT OBJECT prompt_object
        CLASS "PROMPT_QTY_UNIT"
        WITH ( validation_routine = "modify_prompt_pull_amount_validation" ,
               vgl_library        = "$STB_LIB_PULLMODS"                    ,
               base_unit          = matrix_object . get_product_unit( )    ,
               display_only       = display_only                           )

    RETURN( prompt_object )

ENDROUTINE

{*****************************************************************************}

ROUTINE insert_prompt_pull_qty_unit( matrix_object )

{
* Creates a prompt to add the Pull Amount field
*
* Parameters : None
*
******************************************************************************}

    DECLARE prompt_object, display_only

    display_only = BLANK( matrix_object . get_product( ) )

    PROMPT OBJECT prompt_object
        CLASS "PROMPT_QTY_UNIT"
        WITH ( validation_routine = "insert_prompt_pull_amount_validation" ,
               vgl_library        = "$STB_LIB_PULLMODS"                    ,
               base_unit          = matrix_object . get_product_unit( )    ,
               display_only       = display_only                           ) 

    RETURN( prompt_object )

ENDROUTINE

{*****************************************************************************}

ROUTINE prompt_product_id( matrix_object )

{
* Creates a prompt to add the Product field
*
* Parameters : None
*
******************************************************************************}

    DECLARE prompt_object

    PROMPT OBJECT prompt_object
        FORMAT inventory_header . inventory_id
        WITH( display_only = TRUE )

    RETURN( prompt_object )

ENDROUTINE

{*****************************************************************************}

ROUTINE prompt_batch_id( matrix_object )

{
* Creates a prompt to add the Batch Id field
*
* Parameters : None
*
******************************************************************************}

    DECLARE prompt_object

    PROMPT OBJECT prompt_object
        FORMAT inventory_item_summary_view . item_id
        WITH( display_only = TRUE )

    RETURN( prompt_object )

ENDROUTINE

{******************************************************************************}

ROUTINE get_stab_pull_info_fields_common( matrix_object )
{
* contains all the fields required for protocol and study pull information
* window
*
* Parameters : None
*
*******************************************************************************}

    DECLARE count, pull_info_fields

    ARRAY pull_info_fields

    count = 1
    
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 5 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "layer_factor"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "LAYER_FACTOR"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 6 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "time_factor"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "TIME_FACTOR"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 7 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "c_factor"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "C_FACTOR"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Pull Num"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_num"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Description"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "description"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 234

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 1 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_name"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_PHRASE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "PULL_NAME"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "STB_INVENTORY_PULL_AMOUNT", 1 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_qty_unit"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_CUSTOM
    pull_info_fields [ count, ROUTINE_NAME       ] = "modify_prompt_pull_qty_unit"
    pull_info_fields [ count, LIBRARY_NAME       ] = GLOBAL( "CURRENT_LIBRARY" )
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 2 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "location"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "location"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 3 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "sample_template"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "samp_tmpl_header"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 4 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "test_schedule"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "TEST_SCHED_HEADER"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 8 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "label_number"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_INTEGER
    pull_info_fields [ count, PULL_FIELD_MIN     ] = 0
    pull_info_fields [ count, PULL_FIELD_MAX     ] = 10
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "STB_INVENTORY_PRODUCT_ID", 2 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "product_id"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_CUSTOM
    pull_info_fields [ count, ROUTINE_NAME       ] = "prompt_product_id"
    pull_info_fields [ count, LIBRARY_NAME       ] = GLOBAL( "CURRENT_LIBRARY" )
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    RETURN( pull_info_fields )
    
ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_stab_pull_info_fields_protocols( matrix_object )
{
* contains all the fields required for stability protocol pull information
* window
*
* Parameters : 
*
*******************************************************************************}

    RETURN ( get_stab_pull_info_fields_common( matrix_object ) )

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_stab_pull_info_fields_studies( matrix_object )
{
* contains all the fields required for stability study pull information window 
*
* Parameters : 
*
*******************************************************************************}

    DECLARE pull_info_fields, count

    pull_info_fields = get_stab_pull_info_fields_common( matrix_object )
    
    count = size_of_array( pull_info_fields ) + 1
    
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "STB_INVENTORY_BATCH_ID", 2 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "batch_id"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_CUSTOM
    pull_info_fields [ count, ROUTINE_NAME       ] = "prompt_batch_id"
    pull_info_fields [ count, LIBRARY_NAME       ] = GLOBAL( "CURRENT_LIBRARY" )
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 9 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "sample_id_text"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "SAMPLE"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_PHRASE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "cell_disp"
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 10 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "cell_disp"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Assigned Sample"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "created_sample_id"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Due Login Date"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "due_login_date"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    RETURN ( pull_info_fields )

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_stab_pull_insert_fields_common( matrix_object )
{
* Contains all the fields required for stability pull insert window
*
* Parameters : None
*
*******************************************************************************}

    DECLARE count, pull_info_fields

    ARRAY pull_info_fields

    count = size_of_array( pull_info_fields ) + 1

    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 5 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "layer_factor"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "LAYER_FACTOR"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 6 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "time_factor"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "TIME_FACTOR"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 7 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "c_factor"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "C_FACTOR"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Description"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "description"
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 234

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 1 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_name"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_PHRASE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "PULL_NAME"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "STB_INVENTORY_PULL_AMOUNT", 1 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_qty_unit"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_CUSTOM
    pull_info_fields [ count, ROUTINE_NAME       ] = "insert_prompt_pull_qty_unit"
    pull_info_fields [ count, LIBRARY_NAME       ] = GLOBAL( "CURRENT_LIBRARY" )
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 2 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "location"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "location"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 3 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "sample_template"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "samp_tmpl_header"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 4 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "test_schedule"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "TEST_SCHED_HEADER"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 8 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "label_number"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_INTEGER
    pull_info_fields [ count, PULL_FIELD_MIN     ] = 0
    pull_info_fields [ count, PULL_FIELD_MAX     ] = 10
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    RETURN( pull_info_fields )

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_stab_proto_pull_insert_fields( matrix_object )
{
* Contains all the fields required for stability proto pull insert window
*
* Parameters : 
*
*******************************************************************************}

    RETURN( get_stab_pull_insert_fields_common ( matrix_object ) )

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_stab_study_pull_insert_fields( matrix_object )
{
* contains all the fields required for stability study pull insert window
*
* Parameters : 
*
*******************************************************************************}

    RETURN( get_stab_pull_insert_fields_common ( matrix_object ) )

ENDROUTINE

{******************************************************************************}

ROUTINE get_stab_timezero_fields_common( matrix_object )
{
* contains all the fields required for stability timezero window
*
* Parameters : None
*
*******************************************************************************}

    DECLARE pull_info_fields, count

    ARRAY pull_info_fields

    count = 1
    
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 5 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "layer_factor"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "LAYER_FACTOR"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Pull Num"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_num"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Description"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "description"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 234

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 1 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_name"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_PHRASE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "PULL_NAME"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "STB_INVENTORY_PULL_AMOUNT", 1 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "pull_qty_unit"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_CUSTOM
    pull_info_fields [ count, ROUTINE_NAME       ] = "modify_prompt_pull_qty_unit"
    pull_info_fields [ count, LIBRARY_NAME       ] = GLOBAL( "CURRENT_LIBRARY" )
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 2 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "location"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "location"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 3 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "sample_template"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "samp_tmpl_header"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 4 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "test_schedule"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "TEST_SCHED_HEADER"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 8 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "label_number"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_INTEGER
    pull_info_fields [ count, PULL_FIELD_MIN     ] = 0
    pull_info_fields [ count, PULL_FIELD_MAX     ] = 10
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = FALSE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "STB_INVENTORY_PRODUCT_ID", 2 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "product_id"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_CUSTOM
    pull_info_fields [ count, ROUTINE_NAME       ] = "prompt_product_id"
    pull_info_fields [ count, LIBRARY_NAME       ] = GLOBAL( "CURRENT_LIBRARY" )
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    RETURN( pull_info_fields )

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_stab_study_timezero_fields( matrix_object )
{
* contains all the fields required for stability timezero window
*
* Parameters : 
*
*******************************************************************************}

    DECLARE pull_info_fields, count

    pull_info_fields = get_stab_timezero_fields_common( matrix_object )

    count = size_of_array( pull_info_fields ) + 1

    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 9 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "sample_id_text"
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_TABLE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "SAMPLE"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_TYPE    ] = STB_PROMPT_TYPE_PHRASE
    pull_info_fields [ count, PULL_FIELD_BROWSE  ] = "cell_disp"
    pull_info_fields [ count, PULL_FIELD_DESC    ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 10 )
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "cell_disp"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    count = count + 1
    pull_info_fields [ count, PULL_FIELD_DESC    ] = "Assigned Sample"
    pull_info_fields [ count, PULL_FIELD_NAME    ] = "created_sample_id"
    pull_info_fields [ count, PULL_FIELD_DISPLAY ] = TRUE
    pull_info_fields [ count, PULL_FIELD_WIDTH   ] = 20
    pull_info_fields [ count, PULL_FIELD_LENGTH  ] = 20

    RETURN ( pull_info_fields )

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_stab_proto_timezero_fields( matrix_object )
{
* contains all the fields required for stability timezero window
*
* Parameters : 
*
*******************************************************************************}

    RETURN ( get_stab_timezero_fields_common( matrix_object ) )

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE get_syntax_pull_fields( matrix_object )
{
* If the default value is set to TRUE then this automatically be part of the
* initial cell syntax
*
* Parameters : matrix_object , matrix object
*
*******************************************************************************}

    DECLARE syntax_fields, count

    ARRAY syntax_fields

    count = 1
    syntax_fields [ count, PULL_FIELD_DESC   ] = "Pull Num"
    syntax_fields [ count, PULL_FIELD_NAME   ] = "pull_num"
    syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    count = count + 1
    syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 1 )
    syntax_fields [ count, PULL_FIELD_NAME   ] = "pull_name"
    syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    count = count + 1
    syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 2 )
    syntax_fields [ count, PULL_FIELD_NAME   ] = "location"
    syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    count = count + 1
    syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 3 )
    syntax_fields [ count, PULL_FIELD_NAME   ] = "sample_template"
    syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    count = count + 1
    syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 4 )
    syntax_fields [ count, PULL_FIELD_NAME   ] = "test_schedule"
    syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    count = count + 1
    syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 8 )
    syntax_fields [ count, PULL_FIELD_NAME   ] = "label_number"
    syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    count = count + 1
    syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 13 )
    syntax_fields [ count, PULL_FIELD_NAME   ] = "description"
    syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    IF NOT BLANK( matrix_object . get_product( ) ) THEN
    
        count = count + 1
        syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 14 )
        syntax_fields [ count, PULL_FIELD_NAME   ] = "pull_qty_unit"
        syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    ENDIF

    IF matrix_object . is_study( ) THEN

        count = count + 1
        syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 10 )
        syntax_fields [ count, PULL_FIELD_NAME   ] = "cell_disp"
        syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

        count = count + 1
        syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 9 )
        syntax_fields [ count, PULL_FIELD_NAME   ] = "sample_id_text"
        syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

        count = count + 1
        syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 11 )
        syntax_fields [ count, PULL_FIELD_NAME   ] = "created_sample_id"
        syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

        count = count + 1
        syntax_fields [ count, PULL_FIELD_DESC   ] = GET_USER_MESSAGE ( "CELL_SYNTAX_SYNTAX_ARRAY", 12 )
        syntax_fields [ count, PULL_FIELD_NAME   ] = "due_login_date"
        syntax_fields [ count, STB_DEFAULT_VALUE ] = FALSE

    ENDIF

    RETURN ( syntax_fields )

ENDROUTINE

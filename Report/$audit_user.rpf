{******************************************************************************
*
* Module Name   : $AUDIT_USER.RPF
*
* Purpose       : User defined action routines used to influence audit behaviour
*
*******************************************************************************}

JOIN LIBRARY $LIB_UTILS

CONSTANT PROMPT_AUDIT = 0
CONSTANT SILENT_AUDIT = 1
CONSTANT NO_AUDIT     = 2

{*****************************************************************************}
ROUTINE audit_user( VALUE table, VALUE field, VALUE operation, type )
{
* Description : Called when an audit event takes place. The type of the audit
*               (PROMPT,SILENT,NONE) may be altered.
*               The row being affected is currently selected.
*
* Parameters  : table     : The table the operation applies to
*               field     : The field being modified ( none if table level
*                           audit )
*               operation : "INSERT", "MODIFY" or "DELETE"
*               type      : The value representing the type of audit that will
*                           occur. See constants above.
*
******************************************************************************}

DECLARE res_type, status

    IF ( type      = SILENT_AUDIT ) AND
       ( table     = "RESULT"     ) AND
       ( operation = "MODIFY"     ) THEN
       res_type    = SELECT result.result_type
       IF ( res_type = "K" ) OR
          ( res_type = "O" ) THEN
          type = PROMPT_AUDIT
       ENDIF
    ENDIF

    IF ( type      = SILENT_AUDIT ) AND
       ( table     = "JOB_HEADER" ) AND
       ( field     = "JOB_STATUS" ) AND
       ( operation = "MODIFY"     ) THEN
       status      = SELECT job_header.old_status
       IF ( status = "A" ) THEN
          type = PROMPT_AUDIT
       ENDIF
    ENDIF

    IF ( table     = "TEST"     ) AND
       ( operation = "INSERT"     ) THEN
        sample= select test.sample
        sample_type = select sample.sample_type
        IF (sample_type = "REFERENCE") OR (sample_type ="CONTROL") THEN
            type = SILENT_AUDIT
    ENDIF

ENDIF


ENDROUTINE

ROUTINE WriteToLog(VALUE Msg)
{*************************************************************************
* Purpose      : Writes to predefined log,
*                using WriteLog in $lib_utils
* Parameters   : Msg - what to write in log
* Return Value : N/A
**************************************************************************}

    WriteLog(Msg, global("current_library"))

ENDROUTINE


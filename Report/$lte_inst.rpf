{Compared 20140123 /DKTBG}
{******************************************************************************
*
* Module Name   : $LTE_INST
*
* Purpose       : SMP report (built from $LTE_TEM) to provide an instrument
*                 LTE
*
* Document Ref. : SE/T/TVGL-WORK-REPORTS/1/3
*
* Specification : 
*
* Portability   : Not Checked
*
* Re-entrant    : 
*
*******************************************************************************}


{

  INTRODUCTION
  This report is the skeleton for creating table maintainance routines.
  It is intended to be used with the simpler laboratory tables and
  user defined tables. The data entry screen generated will not support
  list type entry screens such as the component editor.

  The following functions will be provided by this report:

      Add/Modify, Display, Print, List, Remove/Unremove

  Reports to support tables are generated by another setup report which
  will copy this report into a supplied name and then allow modification
  of the copy for the table required. Once modified the functions
  generated can be tested from the generic menu.

  The fields displayed on the data entry screen are defined by entering
  values into parameters in this report.

  Once a report has been created then it can be tested using the generic
  menu provided as part of the setup environment.

  ASSOCIATED FILES
        $LABSETUP.RPF  - Setup Report.
        $LABTABLIB.RPF - Library Report containing main routines.
        $LTE_TEM.RPF   - Skeleton Lab Table Report.(This file)


  SETUP DETAILS
  To customise this report for a table a number of variables and
  arrays must be setup in this report. To assist in this a copy
  of the messages file (MESSAGES.PRN) and the structure file (STRUCTURE.TXT)
  will be required.

  The areas of the report to be modified are indicated by comments and
  all occurrences of **** must be replaced with the required values. Note
  that some variables have been given default values which may also require
  changing.

}

{ --------------------------------------------------------------------------- }

{ --------------- Initialization Statements : DO NOT CHANGE ----------------- }

ENABLE WINDOWS
SET NAME "DISPLAY/"

JOIN LIBRARY $LABTABLIB

{ --------------------------------------------------------------------------- }


{ -------------------------- Table Setup Routine ---------------------------- }

ROUTINE table_setup

	ARRAY prompt_details	ARRAY_SIZE ( 0 , 6 )
	ARRAY fields_to_output  ARRAY_SIZE ( 0 )

{

	CHANGE : Specify the name of the table in <name_of_table>
                 eg   name_of_table = "HAZARD"

}

	name_of_table           =  "INSTRUMENT"

{

	CHANGE : MANDATORY : Specify the text to be displayed at the top
                 of the data entry screen in <header_mess>.
                 Note that the text may be specified literally
                 eg   header_mess = "Hazard Data Entry Screen"
                 or may be extracted from the message file
                 eg   header_mess = GET MESSAGE(xyz)

}

	header_mess = GET_USER_MESSAGE ( "LTE_INST_TOP_LINE" , 1 )

{

	CHANGE : MANDATORY : Specify the text to be displayed at the bottom
                 of the data entry screen in <footer_mess> for the options
                 add , copy , modify but not display.
                 Note that the text may be specified literally
                 eg   footer_mess = "Press DO to Save / EXIT to Quit"
                 or may be extracted from the message file
                 eg   footer_mess = GET MESSAGE(xyz)

}

	footer_mess = GET MESSAGE ( 2560 , 1 )

{

	CHANGE : MANDATORY : Specify the text to be displayed at the bottom
                 of the data entry screen in <display_footer_mess> for the
		 display option.	
                 Note that the text may be specified literally
                 eg   footer_mess = "Press EXIT to Quit"
                 or may be extracted from the message file
                 eg   footer_mess = GET MESSAGE(xyz)

}

	display_footer_mess = GET MESSAGE ( 2559 , 1 )

{

	CHANGE : MANDATORY : Specify the names of the fields and the
                 text associated with each field to be displayed on the
                 screen.
                 For each field the field name is stored in an element
                 of array <prompt_details> with an index of FIELD_NAME_POSITION
                 and the message stored with an index of MESSAGE_POSITION.
                 This array will require expanding for the total number
		 of fields required on the screen.

                 e.g
		prompt_details [ 1 , MESSAGE_POSITION    ] = "Group Name"
        	prompt_details [ 1 , FIELD_NAME_POSITION ] = "GROUP_ID"

		prompt_details [ 1 , MESSAGE_POSITION    ] = "Hazard Label Text"
		prompt_details [ 1 , FIELD_NAME_POSITION ] = "LABEL_TEXT"

		prompt_details [ 1 , MESSAGE_POSITION    ] = "Description"
		prompt_details [ 1 , FIELD_NAME_POSITION ] = "DESCRIPTION"

		prompt_details [ 1 , MESSAGE_POSITION    ] = "Modifiable Entry"
		prompt_details [ 1 , FIELD_NAME_POSITION ] = "MODIFIABLE"

                The text may be specified literally as shown above
                or extracted from the message file using GET MESSAGE

}
{**MS 2003R1
[**MS1384

		prompt_details [  1 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_GROUP_ID" , 1 )
        	prompt_details [  1 , FIELD_NAME_POSITION ] = "GROUP_ID"

		prompt_details [  2 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_TYPE" , 1 )
		prompt_details [  2 , FIELD_NAME_POSITION ] = "INSTTYPE"

		prompt_details [  3 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_LOCATION" , 1 )
		prompt_details [  3 , FIELD_NAME_POSITION ] = "LOCATION"

		prompt_details [  4 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_OPERATOR" , 1 )
		prompt_details [  4 , FIELD_NAME_POSITION ] = "OPERATOR"

		prompt_details [  5 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_DESCRIPTION" , 1 )
        	prompt_details [  5 , FIELD_NAME_POSITION ] = "DESCRIPTION"

		prompt_details [  6 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_STATUS" , 1 )
		prompt_details [  6 , FIELD_NAME_POSITION ] = "STATUS"

		prompt_details [  7 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_SERIAL" , 1 )
		prompt_details [  7 , FIELD_NAME_POSITION ] = "SERIAL_NO"

		prompt_details [  8 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_SERV_DATE" , 1 )
		prompt_details [  8 , FIELD_NAME_POSITION ] = "SERVICE_DATE"

		prompt_details [  9 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_SERV_INTR" , 1 )
		prompt_details [  9 , FIELD_NAME_POSITION ] = "SERVICE_INTV"

		prompt_details [ 10 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_CALIB_DATE" , 1 )
        	prompt_details [ 10 , FIELD_NAME_POSITION ] = "CALIB_DATE"

		prompt_details [ 11 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_CALIB_INTR" , 1 )
		prompt_details [ 11 , FIELD_NAME_POSITION ] = "CALIB_INTV"

		prompt_details [ 12 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_MODIFIABLE" , 1 )
		prompt_details [ 12 , FIELD_NAME_POSITION ] = "MODIFIABLE"


                IF GLOBAL("APPROVAL_CHECK_ENABLED") THEN
   	           prompt_details [ 13 , MESSAGE_POSITION    ] =
                                         GET_USER_MESSAGE("LTE_INST_MESS_1" ,1)
         	   prompt_details [ 13 , FIELD_NAME_POSITION ] = "APPROVAL_REQD"
                ENDIF
**MC 2003R1}

		prompt_details [  1 , MESSAGE_POSITION    ] = "Description"
        	prompt_details [  1 , FIELD_NAME_POSITION ] = "DESCRIPTION"

		prompt_details [  2 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_GROUP_ID" , 1 )
        	prompt_details [  2 , FIELD_NAME_POSITION ] = "GROUP_ID"

		prompt_details [  3 , MESSAGE_POSITION    ] = "Status"
		prompt_details [  3 , FIELD_NAME_POSITION ] = "STATUS"

		prompt_details [  4 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_LOCATION" , 1 )
		prompt_details [  4 , FIELD_NAME_POSITION ] = "LOCATION"

		prompt_details [  5 , MESSAGE_POSITION    ] = "Location Details"
		prompt_details [  5 , FIELD_NAME_POSITION ] = "LOCATION_DETAILS"

		prompt_details [  6 , MESSAGE_POSITION    ] = "Work Group"
		prompt_details [  6 , FIELD_NAME_POSITION ] = "WORK_GROUP"

		prompt_details [  7 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_TYPE" , 1 )
		prompt_details [  7 , FIELD_NAME_POSITION ] = "INSTTYPE"

		prompt_details [  8 , MESSAGE_POSITION    ] = "Responsible Operator"
		prompt_details [  8 , FIELD_NAME_POSITION ] = "OPERATOR"

		prompt_details [  9 , MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_SERIAL" , 1 )
		prompt_details [  9 , FIELD_NAME_POSITION ] = "SERIAL_NO"

		prompt_details [ 10 , MESSAGE_POSITION    ] = "Service Required"
		prompt_details [ 10 , FIELD_NAME_POSITION ] = "SERVICE_REQD"

		prompt_details [ 11 , MESSAGE_POSITION    ] = "Serviced By"
		prompt_details [ 11 , FIELD_NAME_POSITION ] = "SERVICED_BY"

		prompt_details [ 12, MESSAGE_POSITION    ] = "Service Details"
		prompt_details [ 12, FIELD_NAME_POSITION ] = "SERVICE_DETAILS"

		prompt_details [ 13, MESSAGE_POSITION    ] = "Latest Service Date"
		prompt_details [ 13, FIELD_NAME_POSITION ] = "SERVICE_DATE"

		prompt_details [ 14, MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_SERV_INTR" , 1 )
		prompt_details [ 14, FIELD_NAME_POSITION ] = "SERVICE_INTV"

		prompt_details [ 15, MESSAGE_POSITION    ] = "Calibration Required"
        	prompt_details [ 15, FIELD_NAME_POSITION ] = "CALIB_REQD"

		prompt_details [ 16, MESSAGE_POSITION    ] = "Calibration Procedure"
		prompt_details [ 16, FIELD_NAME_POSITION ] = "CALIB_PROC"

		prompt_details [ 17, MESSAGE_POSITION    ] = "Latest Calibration Date"
        	prompt_details [ 17, FIELD_NAME_POSITION ] = "CALIB_DATE"

		prompt_details [ 18, MESSAGE_POSITION    ] = GET_USER_MESSAGE ( "LTE_INST_CALIB_INTR" , 1 )
		prompt_details [ 18, FIELD_NAME_POSITION ] = "CALIB_INTV"

                IF GLOBAL("APPROVAL_CHECK_ENABLED") THEN
   	           prompt_details [ 19, MESSAGE_POSITION    ] =
                                         GET_USER_MESSAGE("LTE_INST_MESS_1" ,1)
         	   prompt_details [ 19, FIELD_NAME_POSITION ] = "APPROVAL_REQD"
                ENDIF

{**ME1384}
{**ME 2003R1}
{

	CHANGE : Specify the name of the table to be displayed on the screen
                 in <displayed_name_of_table>. This is useful for foreign
                 language support.
                 eg   displayed_name_of_table = "Hazard"

}

	displayed_name_of_table    = GET_USER_MESSAGE ( "LTE_INST_NAME" , 1 )

{

	CHANGE : Specify the name of the directory where text files are stored
                 which may contain descriptive information in <directory> and
                 the extension of the file in <extn>. If there is no associated
                 text file then these should be set to EMPTY.
                 For instance the hazard table.
                 eg   directory = "SMP$TEXTFILES"
                      extn = "HAZ"
                 or
                      directory = EMPTY
                      extn = EMPTY

}

	directory = "SMP$TEXTFILES"
	extn = "INS"

{

	CHANGE : MANDATORY : Specify the text to be displayed when prompting
                 for an identifier.
                 Note that the text may be specified literally
                 eg   input_mess  = "Enter Hazard ID : "
                 or may be extracted from the message file
                 eg   input_mess = GET MESSAGE(xyz)

}

	input_mess = GET_USER_MESSAGE ( "LTE_INST_INPUT" , 1 )

{

	CHANGE : OPTIONAL : Specify default unique key value for new additions
		to the table - the default values for any new entry to the
		table will be copied from this entry in the database.
                Set <default_value> to be empty to ignore this feature.
		
		e.g
		  default_value = "DEFAULT"

}

	default_value = EMPTY

{

	CHANGE : MANDATORY : Specify the number of the fields to appear
                on the output generated by the list option.
                For each field to be output on the list an element of the array
		<fields_to_output> should contain a number corresponding to
		the position of that field in the array <prompt_details>.
		This array can be of any size from zero elements to the
		size of the arrays <prompt_details>.
		
		e.g
		  fields_to_output [ 1 ] = 1
		  fields_to_output [ 2 ] = 4
		  fields_to_output [ 3 ] = 3

}

	fields_to_output [  1 ]  = 5
	fields_to_output [  2 ]  = 1
	fields_to_output [  3 ]  = 2
	fields_to_output [  4 ]  = 3
	fields_to_output [  5 ]  = 4
	fields_to_output [  6 ]  = 6
	fields_to_output [  7 ]  = 7
	fields_to_output [  8 ]  = 8
	fields_to_output [  9 ]  = 9
	fields_to_output [ 10 ]  = 10
	fields_to_output [ 11 ]  = 11
	fields_to_output [ 12 ]  = 12
{**MS 2003R1
        IF GLOBAL("APPROVAL_CHECK_ENABLED") THEN
           fields_to_output [ 13 ] = 13
        ENDIF
** MC 2003R1}
	fields_to_output [ 13 ]  = 13
	fields_to_output [ 14 ]  = 14
	fields_to_output [ 15 ]  = 15
	fields_to_output [ 16 ]  = 16
	fields_to_output [ 17 ]  = 17
	fields_to_output [ 18 ]  = 18
        IF GLOBAL("APPROVAL_CHECK_ENABLED") THEN
           fields_to_output [ 19 ] = 19
        ENDIF
{**ME 2003R1}
{

	CHANGE : MANDATORY : Specify a special action to happen on pressing the
			     <select> key.

                CHARACTER_POSITION index contains a character for the menu item.
                TITLE_POSITION     index contains a title for the menu item.
                LIBRARY_POSITION   index contains the library to call.
                ROUTINE_POSITION   index contains a routine in the library.

	eg

	special_actions_report [ 1 , CHARACTER_POSITION ] = "*"
	special_actions_report [ 1 , TITLE_POSITION     ] = "Analysis Options"

	special_actions_report [ 2 , CHARACTER_POSITION ] = "1"
	special_actions_report [ 2 , TITLE_POSITION     ] = "1 Analysis Components"
	special_actions_report [ 2 , LIBRARY_POSITION   ] = "$COMP_EDIT"
	special_actions_report [ 2 , ROUTINE_POSITION   ] = "LABTABLE_INPUT"

	special_actions_report [ 3 , CHARACTER_POSITION ] = "2"
	special_actions_report [ 3 , TITLE_POSITION     ] = "2 Analysis Description"
	special_actions_report [ 3 , LIBRARY_POSITION   ] = "$LABTABLIB"
	special_actions_report [ 3 , ROUTINE_POSITION   ] = "TEXT_FILE"

}

	ARRAY 	special_actions_report 	ARRAY_SIZE ( 0 , 4 )

{

	move the comments braces to allow use of these statements

}

{

	special_actions_report [ 1 , CHARACTER_POSITION ] = "1"
	special_actions_report [ 1 , TITLE_POSITION     ] = "1 Phrase List"
	special_actions_report [ 1 , LIBRARY_POSITION   ] = "$PHRASE"
	special_actions_report [ 1 , ROUTINE_POSITION   ] = "DO_PHRASE_LIST"

}

{

	CHANGE : OPTIONAL : Specify five standard messages.

                IDENTITY_MESSAGE contains title text for the identity field.
                MOD_ON_MESSAGE   contains title text for the Modified On field.
                MOD_BY_MESSAGE   contains title text for the Modified by field.
                READ_MESSAGE     contains identifier for the read transaction.
                WRITE_MESSAGE    contains identifier for the write transaction

}

        ARRAY 	labtable_messages 	ARRAY_SIZE ( 0 )

        labtable_messages [ IDENTITY_MESSAGE ] = GET MESSAGE ( 2545 , 1 )
					        { "Identity" }
        labtable_messages [ MOD_ON_MESSAGE   ] = GET MESSAGE ( 2546 , 1 )
						{ "Modified On" }
        labtable_messages [ MOD_BY_MESSAGE   ] = GET MESSAGE ( 2547 , 1 )
                                                { "Modified By" }
        labtable_messages [ READ_MESSAGE     ] = GET MESSAGE ( 2566 , 1 )
                                                { "Labtable Read Transaction" }
        labtable_messages [ WRITE_MESSAGE    ] = GET MESSAGE ( 2567 , 1 )
                                                { "Labtable Write Transaction" }
{

	CHANGE : MANDATORY : Specify the help context for the editor window.
		 The text should be specified literally and should start
		 with the name of the report, suffixed with "_EDIT",
		 	i.e. "$LTE_XXX_EDIT"

}

	help_context = "$LTE_INST_EDIT"


 {   ------	THERE ARE NO MORE FIELDS TO BE SETUP  --------    }

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE validation_routine

RETURN ( TRUE )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE do_the_work  ( VALUE operation )

table_setup ()
smp_lte_perform_option  ( name_of_table              ,
	    	          displayed_name_of_table    ,
			  prompt_details             ,
                          labtable_messages          ,
                          default_value		     ,
                          input_mess		     ,
		          header_mess                ,
		          footer_mess                ,
			  display_footer_mess        ,
			  directory                  ,
			  extn                       ,	
			  help_context               ,
		          GLOBAL ("CURRENT_LIBRARY") ,
			  fields_to_output           ,
			  special_actions_report     ,
			  operation                  )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE add_option ( option )

do_the_work ( "add_ident" )

ENDROUTINE


{ --------------------------------------------------------------------------- }

ROUTINE copy_option ( option )

do_the_work ( "copy_ident" )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE modify_option ( option )

do_the_work ( "modify_ident" )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE display_option ( option )

do_the_work ( "display_ident" )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE remove_option ( option )

do_the_work ( "remove_ident" )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE restore_option ( option )

do_the_work ( "restore_ident" )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE list_option ( option )

do_the_work ( "list_idents" )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE print_option ( option )

do_the_work ( "print_ident" )

ENDROUTINE

{ --------------------------------------------------------------------------- }

ROUTINE smp_lte_initialise

ENDROUTINE

{******************************************************************************
*
* Module Name   : sqcwin_class
*
* Purpose       : Class definitions for sqc.
*                 
*
*******************************************************************************}

SET NAME "DISPLAY/"
SET COMPILE_OPTION DECLARE

SET NOTPROTECTED

JOIN STANDARD_LIBRARY STD_CLASS
JOIN STANDARD_LIBRARY STD_ARRAY
JOIN STANDARD_LIBRARY STD_UTILS

JOIN LIBRARY $sqcwin_glbl

JOIN LIBRARY $lib_utils

{******************************************************************************}

GLOBAL ROUTINE define_sqc_chart

{ 
* Defines the sqc_chart class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

DEFINE CLASS "SQC_CHART"

        PROPERTIES
        "sqc_header"        ,
        "sqc_subgroup"      ,
        "sqc_point"         ,
        "sqc_window"        ,
        "sqc_trend_a"       ,
        "sqc_trend_point_a" ,
        "sqc_trend_b"       ,
        "sqc_trend_point_b" ,
        "sqc_crit_db"        ,
        "sqc_chart_type"     ,
        "sqc_print_type"     ,
        "graph_file_array"   ,
        "edit_mode"          ,
        "data_selection_was" ,
        "chart_id"           ,
        "copy_chart_id"      ,
        "selection_criteria" ,
        "next_screen"        ,
        "header_form"        ,
        "chart_window"       ,
        "active_array"       ,
        "browse_array"       ,
        "ok_button_only"     ,
        "graph_limits_array" ,
        "graph_object_array" ,
        "tmp_chart_type"     ,
        "database_type"      ,
        "decimal_places"     ,
        "view_used"          ,
        "selected_graph"     ,
        "selected_chart"     ,
        "chart_type_ndx"     ,
        "graph_obj_a_ndx"    ,
        "graph_obj_b_ndx"    ,
        "first_time"         ,
        "product_name"                  { product name - assigned when }
                                        { selection criteria used      }

        INITIALISATION

END CLASS

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE sqc_chart_class_initialisation ( self )

{ 
* Initialisation routine for sqc_chart class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

DECLARE graph_lims

CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_header
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_subgroup
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_point
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_window
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_trend_a
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_trend_point_a
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_trend_b
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_trend_point_b
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_crit_db
CREATE OBJECT "STD_OBJECT_DATABASE",    self . sqc_chart_type

self . sqc_header        . initialise ( "SQCWIN_HEADER" )
self . sqc_subgroup      . initialise ( "SQCWIN_SUBGROUP" )
self . sqc_point         . initialise ( "SQCWIN_POINT" )
self . sqc_window        . initialise ( "SQCWIN_WINDOW" )
self . sqc_trend_a       . initialise ( "SQCWIN_TREND" )
self . sqc_trend_point_a . initialise ( "SQCWIN_TREND_POINT" )
self . sqc_trend_b       . initialise ( "SQCWIN_TREND" )
self . sqc_trend_point_b . initialise ( "SQCWIN_TREND_POINT" )
self . sqc_crit_db       . initialise ( "SQCWIN_CRITERIA" )
self . sqc_chart_type    . initialise ( "SQCWIN_CHART_TYPE" )
self . sqc_print_type    = PRINT_TYPE_NONE
ARRAY self . graph_file_array

self . sqc_chart_type . add_index( "ORDER_NUM" )
self . sqc_chart_type . add_index ( "chart_id" )

self . edit_mode            = ""
self . data_selection_was   = ""
self . chart_id             = ""
self . copy_chart_id        = ""

ARRAY self . selection_criteria

self . selection_criteria [ 1, 1 ] = ARRAY_SELECT_EQ
self . selection_criteria [ 1, 2 ] = "ANALYSIS"
self . selection_criteria [ 1, 3 ] = ""

self . selection_criteria [ 2, 1 ] = ARRAY_SELECT_AND

self . selection_criteria [ 3, 1 ] = ARRAY_SELECT_EQ
self . selection_criteria [ 3, 2 ] = "COMPONENT_NAME"
self . selection_criteria [ 3, 3 ] = ""

self . selection_criteria [ 4, 1 ] = ARRAY_SELECT_AND

self . selection_criteria [ 5, 1 ] = ARRAY_SELECT_EQ
self . selection_criteria [ 5, 2 ] = "RESULT_TYPE"
self . selection_criteria [ 5, 3 ] = "N"

self . next_screen = ""
self . header_form = ""

self . chart_window = ""

ARRAY self . active_array

ARRAY self . browse_array

self . ok_button_only = FALSE

define_graph_limits ()

CREATE OBJECT "GRAPH_LIMITS", graph_lims

ARRAY self . graph_limits_array ARRAYSIZE ( 0 ) = graph_lims

ARRAY self . graph_object_array ARRAYSIZE ( 0 )

self . database_type = ACTIVE_DATABASE

self . decimal_places = 2

self . selected_graph = EMPTY
self . selected_chart = EMPTY

self . chart_type_ndx  = 0
self . graph_obj_a_ndx = 0
self . graph_obj_b_ndx = 0

self . first_time     = TRUE

self . product_name   = ""

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE define_shewhart_constants

{ 
* Defines the shewhart_constants class.
* 
* 
*
* Parameters   : 
* Return Value : 
*
*******************************************************************************}

DEFINE CLASS "SHEWHART_CONSTANTS"

        PROPERTIES
        "x1"    ,
        "r1"    ,
        "r2"    ,
        "r3"

END CLASS

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE define_shewhart_constant_arrays

{ 
* Defines the shewhart_constant_arrays class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

DEFINE CLASS "SHEWHART_CONSTANT_ARRAYS"

        PROPERTIES
        "shewhart_x_constant"   ,
        "shewhart_r_constant"

    INITIALISATION

END CLASS

ENDROUTINE

{******************************************************************************}

ROUTINE shewhart_constant_arrays_class_initialisation ( self )

{ 
* Initialisation routine for shewhart_constant_arrays class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

    ARRAY self . shewhart_x_constant ARRAYSIZE (3,10)
    ARRAY self . shewhart_r_constant ARRAYSIZE (2,5,10)

    {A2}
    self . shewhart_x_constant [1, 1]= 2.66
    self . shewhart_x_constant [1, 2]= 1.88
    self . shewhart_x_constant [1, 3]= 1.02
    self . shewhart_x_constant [1, 4]= 0.73
    self . shewhart_x_constant [1, 5]= 0.58
    self . shewhart_x_constant [1, 6]= 0.48
    self . shewhart_x_constant [1, 7]= 0.42
    self . shewhart_x_constant [1, 8]= 0.37
    self . shewhart_x_constant [1, 9]= 0.34
    self . shewhart_x_constant [1,10]= 0.31
    {A1}
    self . shewhart_x_constant [2, 1]= 0.00 {unused}
    self . shewhart_x_constant [2, 2]= 3.76
    self . shewhart_x_constant [2, 3]= 2.39
    self . shewhart_x_constant [2, 4]= 1.88
    self . shewhart_x_constant [2, 5]= 1.60
    self . shewhart_x_constant [2, 6]= 1.41
    self . shewhart_x_constant [2, 7]= 1.28
    self . shewhart_x_constant [2, 8]= 1.17
    self . shewhart_x_constant [2, 9]= 1.09
    self . shewhart_x_constant [2,10]= 1.03
    {A}
    self . shewhart_x_constant [3, 1]= 3.00
    self . shewhart_x_constant [3, 2]= 2.12
    self . shewhart_x_constant [3, 3]= 1.73
    self . shewhart_x_constant [3, 4]= 1.50
    self . shewhart_x_constant [3, 5]= 1.34
    self . shewhart_x_constant [3, 6]= 1.22
    self . shewhart_x_constant [3, 7]= 1.13
    self . shewhart_x_constant [3, 8]= 1.06
    self . shewhart_x_constant [3, 9]= 1.00
    self . shewhart_x_constant [3,10]= 0.95
    {D4}
    self . shewhart_r_constant [1,1, 1]= 3.27
    self . shewhart_r_constant [1,1, 2]= 3.27
    self . shewhart_r_constant [1,1, 3]= 2.57
    self . shewhart_r_constant [1,1, 4]= 2.28
    self . shewhart_r_constant [1,1, 5]= 2.11
    self . shewhart_r_constant [1,1, 6]= 2.00
    self . shewhart_r_constant [1,1, 7]= 1.92
    self . shewhart_r_constant [1,1, 8]= 1.86
    self . shewhart_r_constant [1,1, 9]= 1.82
    self . shewhart_r_constant [1,1, 10]= 1.78
    {D3}
    self . shewhart_r_constant [1,2, 1]= 0.00
    self . shewhart_r_constant [1,2, 2]= 0.00
    self . shewhart_r_constant [1,2, 3]= 0.00
    self . shewhart_r_constant [1,2, 4]= 0.00
    self . shewhart_r_constant [1,2, 5]= 0.00
    self . shewhart_r_constant [1,2, 6]= 0.00
    self . shewhart_r_constant [1,2, 7]= 0.08
    self . shewhart_r_constant [1,2, 8]= 0.14
    self . shewhart_r_constant [1,2, 9]= 0.18
    self . shewhart_r_constant [1,2,10]= 0.22
    {D2}
    self . shewhart_r_constant [1,3, 1]= 3.69 {?}
    self . shewhart_r_constant [1,3, 2]= 3.69
    self . shewhart_r_constant [1,3, 3]= 4.36
    self . shewhart_r_constant [1,3, 4]= 4.70
    self . shewhart_r_constant [1,3, 5]= 4.92
    self . shewhart_r_constant [1,3, 6]= 5.08
    self . shewhart_r_constant [1,3, 7]= 5.20
    self . shewhart_r_constant [1,3, 8]= 5.31
    self . shewhart_r_constant [1,3, 9]= 5.39
    self . shewhart_r_constant [1,3,10]= 5.47
    {d2}
    self . shewhart_r_constant [1,4, 1]= 1.128 {?}
    self . shewhart_r_constant [1,4, 2]= 1.128
    self . shewhart_r_constant [1,4, 3]= 1.693
    self . shewhart_r_constant [1,4, 4]= 2.059
    self . shewhart_r_constant [1,4, 5]= 2.326
    self . shewhart_r_constant [1,4, 6]= 2.534
    self . shewhart_r_constant [1,4, 7]= 2.704
    self . shewhart_r_constant [1,4, 8]= 2.847
    self . shewhart_r_constant [1,4, 9]= 2.970
    self . shewhart_r_constant [1,4,10]= 3.078
    {D1}
    self . shewhart_r_constant [1,5, 1]= 0.00 {?}
    self . shewhart_r_constant [1,5, 2]= 0.00
    self . shewhart_r_constant [1,5, 3]= 0.00
    self . shewhart_r_constant [1,5, 4]= 0.00
    self . shewhart_r_constant [1,5, 5]= 0.00
    self . shewhart_r_constant [1,5, 6]= 0.00
    self . shewhart_r_constant [1,5, 7]= 0.20
    self . shewhart_r_constant [1,5, 8]= 0.39
    self . shewhart_r_constant [1,5, 9]= 0.55
    self . shewhart_r_constant [1,5,10]= 0.69
    {B4}
    self . shewhart_r_constant [2,1, 1]= 0.00 {unused}
    self . shewhart_r_constant [2,1, 2]= 3.27
    self . shewhart_r_constant [2,1, 3]= 2.57
    self . shewhart_r_constant [2,1, 4]= 2.27
    self . shewhart_r_constant [2,1, 5]= 2.09
    self . shewhart_r_constant [2,1, 6]= 1.97
    self . shewhart_r_constant [2,1, 7]= 1.88
    self . shewhart_r_constant [2,1, 8]= 1.81
    self . shewhart_r_constant [2,1, 9]= 1.76
    self . shewhart_r_constant [2,1,10]= 1.72
    {B3}
    self . shewhart_r_constant [2,2, 1]= 0.00 {unused}
    self . shewhart_r_constant [2,2, 2]= 0.00
    self . shewhart_r_constant [2,2, 3]= 0.00
    self . shewhart_r_constant [2,2, 4]= 0.00
    self . shewhart_r_constant [2,2, 5]= 0.00
    self . shewhart_r_constant [2,2, 6]= 0.03
    self . shewhart_r_constant [2,2, 7]= 0.12
    self . shewhart_r_constant [2,2, 8]= 0.19
    self . shewhart_r_constant [2,2, 9]= 0.24
    self . shewhart_r_constant [2,2,10]= 0.28
    {B2}
    self . shewhart_r_constant [2,3, 1]= 0.00 {unused}
    self . shewhart_r_constant [2,3, 2]= 1.84
    self . shewhart_r_constant [2,3, 3]= 1.86
    self . shewhart_r_constant [2,3, 4]= 1.81
    self . shewhart_r_constant [2,3, 5]= 1.76
    self . shewhart_r_constant [2,3, 6]= 1.71
    self . shewhart_r_constant [2,3, 7]= 1.67
    self . shewhart_r_constant [2,3, 8]= 1.64
    self . shewhart_r_constant [2,3, 9]= 1.61
    self . shewhart_r_constant [2,3,10]= 1.58
    {c2}
    self . shewhart_r_constant [2,4, 1]= 0.0000 {unused}
    self . shewhart_r_constant [2,4, 2]= 0.5642
    self . shewhart_r_constant [2,4, 3]= 0.7236
    self . shewhart_r_constant [2,4, 4]= 0.7979
    self . shewhart_r_constant [2,4, 5]= 0.9407
    self . shewhart_r_constant [2,4, 6]= 0.8686
    self . shewhart_r_constant [2,4, 7]= 0.8882
    self . shewhart_r_constant [2,4, 8]= 0.9027
    self . shewhart_r_constant [2,4, 9]= 0.9139
    self . shewhart_r_constant [2,4,10]= 0.9927
    {B1}
    self . shewhart_r_constant [2,5, 1]= 0.00 {unused}
    self . shewhart_r_constant [2,5, 2]= 0.00
    self . shewhart_r_constant [2,5, 3]= 0.00
    self . shewhart_r_constant [2,5, 4]= 0.00
    self . shewhart_r_constant [2,5, 5]= 0.00
    self . shewhart_r_constant [2,5, 6]= 0.03
    self . shewhart_r_constant [2,5, 7]= 0.10
    self . shewhart_r_constant [2,5, 8]= 0.17
    self . shewhart_r_constant [2,5, 9]= 0.22
    self . shewhart_r_constant [2,5,10]= 0.26

ENDROUTINE


{******************************************************************************}

GLOBAL ROUTINE define_graph_limits

{ 
* Defines the graph_limits class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

DEFINE CLASS "GRAPH_LIMITS"

    PROPERTIES

        "chart_type_id",

        "US_a",
        "UCL_a",
        "UWL_a",
        "USD_a",
        "mean_a",
        "LCL_a",
        "LWL_a",
        "LSD_a",
        "LS_a",

        "US_b",
        "UCL_b",
        "UWL_b",
        "USD_b",
        "mean_b",
        "LCL_b",
        "LWL_b",
        "LSD_b",
        "LS_b"

    INITIALISATION

END CLASS

ENDROUTINE

{******************************************************************************}

ROUTINE graph_limits_class_initialisation ( self )

{ 
* Initialisation routine for graph_limits class
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

self . chart_type_id = ""

self . US_a   = 0
self . UCL_a  = 0
self . UWL_a  = 0
self . USD_a  = 0
self . mean_a = 0
self . LSD_a  = 0
self . LWL_a  = 0
self . LCL_a  = 0
self . LS_a   = 0

self . US_b   = 0
self . UCL_b  = 0
self . UWL_b  = 0
self . USD_b  = 0
self . mean_b = 0
self . LSD_b  = 0
self . LWL_b  = 0
self . LCL_b  = 0
self . LS_b   = 0

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE define_sqc_form

{ 
* Defines sqc_form class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

DEFINE CLASS "SQC_FORM"

    INHERIT "STD_FORM"
    PROPERTIES
	"sqc_chart"

    INITIALISATION        

END CLASS

ENDROUTINE

{******************************************************************************}

ROUTINE sqc_form_class_initialisation( self )

{ 
* Initialisation routine for sqc_form class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

	self . prompt_id = "SQC_CHART_FORM"
	self.height=18
	self.width=75
	self . row = 6
	self . column = 5

	self . add_frame( ""                    , 
	                  1                     ,
	                  ( self . height - 2 ) ,
			  0                     ,
			  self . width          )
	self . add_panel( 1                                       ,
			  1                                       ,
			  self . height                           ,
			  self .width                             ,
			  PANEL_H_EXPAND_OFF + PANEL_V_EXPAND_OFF )
	
ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE define_graph_object

{ 
* Defines the graph_object class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

    DEFINE CLASS "GRAPH_OBJECT"

        PROPERTIES
            "chart_type",
            "graph_type",
            "win_obj_array",
            "x_points",
            "y_points",
            "x_trend",
            "y_trend",
            "x_bad",
            "y_bad",
            "x_legend",
            "y_legend",
            "us",
            "ucl",
            "lcl",
            "uwl",
            "lwl",
            "usd",
            "lsd",
            "ls",
            "mean",
            "max_y",
            "min_y",
            "disp_sp",
            "disp_cl",
            "disp_wl",
            "disp_sd",
            "disp_mean",
            "no_x",
            "start_col",
            "use_y_axis",
            "y_max",
            "y_min",
            "first_subgroup",   { for pc }
            "last_subgroup",    { for pc }
            "skewness",         { for pc }
            "kurtosis",         { for pc }
            "cap_ratio",        { for pc }
            "cap_index",        { for pc }
            "cpk_index",        { for pc }
            "sigma",            { for pc }
            "spec_min",         { for pc }
            "spec_max",         { for pc }
            "end_pos",          { for pc }
            "start_pos",        { for pc }
            "cusum_max",
            "cusum_min",
            "cusum_target",
            "x_dep_minus",
            "x_dep_plus",
            "dep_end_y_plus",
            "dep_end_y_minus",
            "dep_slope",
            "dec_end_point_x_plus",
            "dec_end_point_y_plus",
            "dec_start_point_x_plus",
            "dec_start_point_y_plus",
            "dec_end_point_x_minus",
            "dec_end_point_y_minus",
            "dec_start_point_x_minus",
            "dec_start_point_y_minus",
            "dec_point",
            "dec_interval",
            "dec_slope",
            "disp_dec"

        INITIALISATION

    END CLASS

ENDROUTINE

{******************************************************************************}

ROUTINE graph_object_class_initialisation ( self )

{ 
* Initialisation routine for graph_object class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

    self . chart_type = ""
    self . graph_type = ""

    ARRAY self . x_points ARRAYSIZE ( 0 )
    ARRAY self . y_points ARRAYSIZE ( 0 )
    ARRAY self . x_trend  ARRAYSIZE ( 0 )
    ARRAY self . y_trend  ARRAYSIZE ( 0 )
    ARRAY self . x_bad    ARRAYSIZE ( 0 )
    ARRAY self . y_bad    ARRAYSIZE ( 0 )

    ARRAY self . win_obj_array ARRAYSIZE ( 0 )

    self . x_legend = ""
    self . y_legend = ""

    self . us   = 0
    self . ls   = 0
    self . ucl  = 0
    self . lcl  = 0
    self . uwl  = 0
    self . lwl  = 0
    self . usd  = 0
    self . lsd  = 0
    self . mean = 0

    self . max_y = -99999
    self . min_y = 99999

    self . y_max = -99999
    self . y_min = 99999

    self . disp_sp   = FALSE
    self . disp_cl   = FALSE
    self . disp_wl   = FALSE
    self . disp_sd   = FALSE
    self . disp_sp   = FALSE
    self . disp_mean = TRUE

    self . no_x = 0
    self . start_col = 0

    self . first_subgroup = 0
    self . last_subgroup  = 0
    self . skewness       = 0
    self . kurtosis       = 0
    self . cap_ratio      = 0
    self . cap_index      = 0
    self . cpk_index      = 0
    self . sigma          = 0
    self . spec_min       = 0
    self . spec_max       = 0
    self . end_pos        = 0
    self . start_pos      = 0

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE define_window_object

{ 
* Defines window_object class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

    DEFINE CLASS "WINDOW_OBJECT"

        PROPERTIES
            "window_number",
            "first_point",
            "last_point",
            "display_window",
            "x_points",
            "y_points",
            "x_trend",
            "y_trend",
            "x_bad",
            "y_bad",
            "us",
            "ucl",
            "lcl",
            "uwl",
            "lwl",
            "usd",
            "lsd",
            "ls",
            "mean",
            "no_x",
            "start_col",
            "use_y_axis",
            "y_max",
            "y_min"

        INITIALISATION

    END CLASS

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE window_object_class_initialisation ( self )

{ 
* Initialisation routine for window_object class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

self . window_number  = 0
self . first_point    = 0
self . last_point     = 0
self . display_window = TRUE

ARRAY self . x_points  ARRAYSIZE ( 0 ) = EMPTY
ARRAY self . y_points  ARRAYSIZE ( 0 ) = EMPTY
ARRAY self . x_trend   ARRAYSIZE ( 0 ) = EMPTY
ARRAY self . y_trend   ARRAYSIZE ( 0 ) = EMPTY
ARRAY self . x_bad     ARRAYSIZE ( 0 ) = EMPTY
ARRAY self . y_bad     ARRAYSIZE ( 0 ) = EMPTY

self . us   = 0
self . ucl  = 0
self . lcl  = 0
self . uwl  = 0
self . lwl  = 0
self . usd  = 0
self . lsd  = 0
self . ls   = 0
self . mean = 0
self . no_x = 0

self . start_col  = 0
self . use_y_axis = 0
self . y_max      = 0
self . y_min      = 0

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE define_shewhart_recalcs

{ 
* Defines shewhart_recalcs class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

    DEFINE CLASS "shewhart_recalcs"

        PROPERTIES
            "chart_type",

            "do_recalc_subgrps",
            "do_recalc_limits",
            "do_recalc_trends"

        INITIALISATION

    END CLASS

ENDROUTINE

{******************************************************************************}

ROUTINE shewhart_recalcs_class_initialisation ( self )

{ 
* Initialisation routine for shewhart_recalcs class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

    self . chart_type = ""

    self . do_recalc_subgrps = TRUE
    self . do_recalc_limits  = TRUE
    self . do_recalc_trends  = TRUE

ENDROUTINE

{******************************************************************************}

GLOBAL ROUTINE define_sqc_graph_form

{ 
* Defines sqc_graph_form class
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

DEFINE CLASS "SQC_GRAPH_FORM"

	INHERIT "STD_FORM"

	PROPERTIES
		"toolbar"                ,
		"graph_object"           ,
		"lower_recalc_graph" ,
		"lower_recalc_point"

	ACTIONS
		"set_lower_recalc_graph"   ,
		"reset_lower_recalc_graph" ,
		"get_lower_recalc_graph"   ,
		"set_lower_recalc_point"   ,
		"reset_lower_recalc_point" ,
		"get_lower_recalc_point"

	INITIALISATION        

END CLASS

ENDROUTINE

{******************************************************************************}

ROUTINE sqc_graph_form_class_initialisation( self )

{ 
* Initialisation routine for sqc_graph_form class.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

	self . prompt_id = "SQC_GRAPH_FORM"
	self . height = 22
	self . width  = 85
	self . row    = 2	
	self . column = 2                 
        self .button_style=FORM_BUTTON_NONE

	self . reset_lower_recalc_graph()
	self . reset_lower_recalc_point()
	
ENDROUTINE

{******************************************************************************}

ROUTINE sqc_graph_form_action_reset_lower_recalc_graph( self )

{ 
* graph_form call action reset lower_recalc value.
* 
* 
*
* Parameters   : self
* Return Value : n/a
*
*******************************************************************************}

	self . lower_recalc_graph = 0	

ENDROUTINE

{******************************************************************************}

ROUTINE sqc_graph_form_action_set_lower_recalc_graph( self, graph_value )

{ 
* graph_form call action reset lower_recalc value.
* 
* 
*
* Parameters   : self, graph_value
* Return Value : n/a
*
*******************************************************************************}

	self . lower_recalc_graph = graph_value

ENDROUTINE

{******************************************************************************}

ROUTINE sqc_graph_form_action_get_lower_recalc_graph( self )

{ 
* graph_form call action reset lower_recalc value.
* 
* 
*
* Parameters   : self
* Return Value : lower_recalc_graph
*
*******************************************************************************}

	RETURN( self . lower_recalc_graph )

ENDROUTINE

{******************************************************************************}

ROUTINE sqc_graph_form_action_reset_lower_recalc_point( self )

{ 
* graph_form call action reset lower_recalc value.
* 
* 
*
* Parameters   : n/a
* Return Value : n/a
*
*******************************************************************************}

	self . lower_recalc_point = 0	

ENDROUTINE

{******************************************************************************}

ROUTINE sqc_graph_form_action_set_lower_recalc_point( self, point_value )

{ 
* graph_form call action reset lower_recalc value.
* 
* 
*
* Parameters   : self, point_value
* Return Value : n/a
*
*******************************************************************************}

	self . lower_recalc_point = point_value

ENDROUTINE

{******************************************************************************}

ROUTINE sqc_graph_form_action_get_lower_recalc_point( self )

{ 
* graph_form call action reset lower_recalc value.
* 
* 
*
* Parameters   : self
* Return Value : lower_recalc_point
*
*******************************************************************************}

	RETURN( self . lower_recalc_point )

ENDROUTINE

{Compared 20140122 /DKTBG}
SET NAME "DEFER/"

SET COMPILE_OPTION DECLARE

ENABLE WINDOWS

JOIN STANDARD_LIBRARY STD_CLIENT

CONSTANT FILE_URI = "file:///"

process_client_message()

{*****************************************************************************}

ROUTINE process_client_message

{	Reads a the parameters and responds accordingly
*
******************************************************************************}

	DECLARE entity, instruction

	IF GLOBAL( "PARAM_ACTIVE" ) THEN
		PROMPT FOR entity
	ELSE
		entity = EMPTY
	ENDIF

	IF GLOBAL( "PARAM_ACTIVE" ) THEN
		PROMPT FOR instruction
	ELSE
		instruction = EMPTY
	ENDIF

	IF entity = "JOB" THEN
		IF instruction = "GET_STATUS" THEN
			send_job_status_counts()
		ENDIF

	ELSEIF entity = "SAMPLE" THEN
		IF instruction = "GET_STATUS" THEN
			send_sample_status_counts()
		ENDIF

	ELSEIF entity = "TEST" THEN
		IF instruction = "GET_STATUS" THEN
			send_test_status_counts()
		ENDIF
	
	ELSEIF entity = "LOT" THEN
		IF instruction = "GET_STATUS" THEN
			send_lot_status_counts()
		ENDIF
	
	ENDIF

ENDROUTINE

{*****************************************************************************}

ROUTINE build_status_count_parameters( VALUE table         ,
                                       VALUE status_field  ,
                                       VALUE status_phrase )

{
*	Builds a parameter string containing counts of each status 
*
******************************************************************************}

	DECLARE parameters, stat_val, count

	parameters = ""

	stat_val = SELECT phrase . phrase_id
	            WHERE phrase_type = status_phrase

	WHILE stat_val <> EMPTY DO
{**M2003R1: For job and sample, select only the count for the users default group id}

             IF (table = "SAMPLE") OR (table = "C_SAMPLE") OR (table = "JOB_HEADER") OR (table = "C_JOB_HEADER")
             THEN
		count = TRUNC( SELECT COUNT 'table' WHERE 'status_field' = stat_val AND group_id = GLOBAL ( "DEFAULT_GROUP" )
)             
             ELSE
		count = TRUNC( SELECT COUNT 'table' WHERE 'status_field' = stat_val )
	     ENDIF
	     
		parameters = parameters : STRIP(stat_val) : "%03" :
		                          STRIP(count)    : "%04"
		
		NEXT phrase
		stat_val = SELECT phrase . phrase_id

	ENDWHILE

	RETURN ( parameters )
			    
ENDROUTINE	    

{*****************************************************************************}

ROUTINE send_job_status_counts

{
*	Builds a parameter string to send along with the web page to the client 
*
******************************************************************************}

	DECLARE parameters, client_name, errors

	parameters = build_status_count_parameters( "JOB_HEADER" ,
	                                            "JOB_STATUS" ,
	                                            "JOB_STAT"   )

	errors = client_get_resource_name( "HTML\SampleStatus", client_name )

	IF errors = EMPTY THEN

		client_name = FILE_URI : client_name : "\JobStatus.htm"
		client_set_desktop_url( client_name : "?" : parameters )

	ENDIF

ENDROUTINE

{*****************************************************************************}

ROUTINE send_sample_status_counts

{
*	Builds a parameter string to send along with the web page to the client 
*
******************************************************************************}

	DECLARE parameters, client_name, errors

	parameters = build_status_count_parameters( "SAMPLE"    ,
	                                            "STATUS"    ,
	                                            "SAMP_STAT" )

	errors = client_get_resource_name( "HTML\SampleStatus", client_name )

	IF errors = EMPTY THEN

		client_name = FILE_URI : client_name : "\SampleStatus.htm"
		client_set_desktop_url( client_name : "?" : parameters )

	ENDIF

ENDROUTINE

{*****************************************************************************}

ROUTINE send_test_status_counts

{
*	Builds a parameter string to send along with the web page to the client 
*
******************************************************************************}

	DECLARE parameters, client_name, errors

	parameters = build_status_count_parameters( "TEST"      ,
	                                            "STATUS"    ,
	                                            "TEST_STAT" )

	errors = client_get_resource_name( "HTML\SampleStatus", client_name )

	IF errors = EMPTY THEN

		client_name = FILE_URI : client_name : "\TestStatus.htm"
		client_set_desktop_url( client_name : "?" : parameters )

	ENDIF

ENDROUTINE

{*****************************************************************************}

ROUTINE send_lot_status_counts

{
*	Builds a parameter string to send along with the web page to the client 
*
******************************************************************************}

	DECLARE parameters, client_name, errors

	parameters = build_status_count_parameters( "LOT_DETAILS"      ,
	                                            "STATUS"    ,
	                                            "LOT_STAT" )

	errors = client_get_resource_name( "HTML\SampleStatus", client_name )

	IF errors = EMPTY THEN

		client_name = FILE_URI : client_name : "\LotStatus.htm"
		client_set_desktop_url( client_name : "?" : parameters )

	ENDIF

ENDROUTINE

{*****************************************************************************}
{*****************************************************************************}
{*****************************************************************************}

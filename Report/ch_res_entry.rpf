{******************************************************************************
*
* Issue No      : 1447 Testmixes Pohlheim. HBe 3-4-2003
*
* Module Name   : CH_RES_ENTRY.RPF
*
* Purpose       : Result entry on custom functionality.
*                 
*
* Document Ref. :
*
* Specification :
*
* Portability   : Not Checked
*
* Re-entrant    : Yes
*
*******************************************************************************}


SET COMPILE_OPTION DECLARE

ENABLE WINDOWS

SET NAME "DEFER/"

JOIN STANDARD_LIBRARY STD_ARRAY_SELECT
JOIN STANDARD_LIBRARY STD_MESSAGE
JOIN STANDARD_LIBRARY STD_RESULT
JOIN STANDARD_LIBRARY STD_DATABASE
JOIN STANDARD_LIBRARY STD_PROMPT
JOIN STANDARD_LIBRARY STD_WINDOW

JOIN LIBRARY $LIB_UTILS
JOIN LIBRARY $RESULT_LIST
JOIN LIBRARY $RESULT_SPREADSHEET
JOIN LIBRARY $WKSBROWSE
JOIN LIBRARY $LIB_RE_GLOBALS


{res_sm_batch (RE_MODIFY)}


{-----------------------------------------------------------------------------}

ROUTINE create_prompt_form (       prompt_form   ,
                             VALUE window_width  ,
                             VALUE window_height ,
                                   window_header ,
                                   window_footer )

	CREATE OBJECT PROMPT_CLASS_FORM , prompt_form

	prompt_form . height = window_height
	prompt_form . width  = window_width
	prompt_form . row    = 11
	prompt_form . column = ROUND ( ( GLOBAL ( "SCREEN_WIDTH" ) -
					window_width  ) / 2 )
	prompt_form . border = TRUE
	prompt_form . header = window_header
	prompt_form . footer = window_footer
	prompt_form . proportional = TRUE
	prompt_form . return_behaviour = FORM_RETURN_LEAVE

ENDROUTINE

{-----------------------------------------------------------------------------}

ROUTINE sample_enter_prompt ( num_id )

	IF num_id . get_lastkey () <> "EXIT" THEN

		num_id . select_array [1,3] =
			num_id . parent_prompt . prompt_objects [1] . value

	ENDIF

ENDROUTINE

{-----------------------------------------------------------------------------}
{Result entry based on SampleManager SM-batch number ("Testmix ID").}

ROUTINE res_sm_batch ( VALUE mode )

        DECLARE batch_id , batch_string , tsr_header ,
		tsr_footer , samp_num_string , window_width , prompt_form ,
		title_width , samp_num_title , batch_title , button, num_id,
                sample_text, samp_text_title, samp_text_string, samp_desc_title,
                samp_desc_string, sample_description, select_array_batch, select_array

	IF mode = RE_MODIFY THEN
		set sample_status "VC"
                set job_status "VC"
	        message_fetch ( "RESULT_ENTRY_ENTRY_TITLE", tsr_header )
        ELSEIF mode = RE_AUTHORISE THEN
		set sample_status "VC"
		set job_status "VC"
	        message_fetch ( "RESULT_ENTRY_AUTHORISE_TITLE", tsr_header )
        ELSEIF mode = RE_DISPLAY THEN
		set sample_status "ASXVCI"
		set job_status "ASXVCI"
	        message_fetch ( "RESULT_ENTRY_DISPLAY_TITLE", tsr_header )
	ELSE
        	message_fetch ( "RES_ENTRY_HEAD_1", tsr_header )
		set sample_status "VCA"
		set job_status "VCA"
	ENDIF

        message_fetch ( "RES_ENTRY_FOOT_1", tsr_footer )


        batch_string     = "SM Lot Number"
        samp_num_string  = "Numeric Sample ID"
        samp_text_string = "Textual Sample ID" 
        samp_desc_string = "Sample Description"

        IF stringlength ( batch_string ) >
           stringlength ( samp_num_string ) THEN

		title_width = stringlength ( batch_string )
        ELSE
		title_width = stringlength ( samp_num_string )
        ENDIF

	window_width = 31 + title_width

	create_prompt_form ( prompt_form  ,
	                     window_width ,
	                     4            ,
	                     tsr_header   ,
	                     tsr_footer   )



	ARRAY select_array_batch


	select_array_batch [1,1] = ARRAY_SELECT_ORDER
	select_array_batch [1,2] = "BATCH_NAME"
	select_array_batch [1,3] = ARRAY_SELECT_DESCENDING

	select_array_batch [2,1] = ARRAY_SELECT_LIKE
	select_array_batch [2,2] = "BATCH_NAME"
	select_array_batch [2,3] = "SM%"


	IF (mode = RE_MODIFY) OR (mode = RE_AUTHORISE) THEN

	   select_array_batch [3,1] = ARRAY_SELECT_AND
	   select_array_batch [3,2] = EMPTY
	   select_array_batch [3,3] = EMPTY

	   select_array_batch [4,1] = ARRAY_SELECT_PUSH
	   select_array_batch [4,2] = EMPTY
	   select_array_batch [4,3] = EMPTY

	   select_array_batch [5,1] = ARRAY_SELECT_EQ
	   select_array_batch [5,2] = "JOB_STATUS"
	   select_array_batch [5,3] = "V"

	   select_array_batch [6,1] = ARRAY_SELECT_OR
	   select_array_batch [6,2] = EMPTY
	   select_array_batch [6,3] = EMPTY

	   select_array_batch [7,1] = ARRAY_SELECT_EQ
	   select_array_batch [7,2] = "JOB_STATUS"
	   select_array_batch [7,3] = "C"

	   select_array_batch [8,1] = ARRAY_SELECT_POP
	   select_array_batch [8,2] = EMPTY
	   select_array_batch [8,3] = EMPTY

        ENDIF



	ARRAY select_array

	select_array [1,1] = ARRAY_SELECT_EQ
	select_array [1,2] = "TESTMIX_ID"
	select_array [1,3] = ""

	select_array [2,1] = ARRAY_SELECT_ORDER
	select_array [2,2] = "ID_NUMERIC"
	select_array [2,3] = ARRAY_SELECT_ASCENDING



	PROMPT OBJECT batch_title
		FORMAT TEXT
                ON LINE 1 FROM 1
		WITH ( bold   = TRUE                ,
		       width  = title_width         ,
		       value  = batch_string )

	prompt_form . add_display ( batch_title )

	PROMPT OBJECT samp_num_title
		FORMAT TEXT
                ON LINE 2 FROM 1
		WITH ( bold   = TRUE             ,
		       width  = title_width      ,
		       value  = samp_num_string )

	prompt_form . add_display ( samp_num_title )

	PROMPT OBJECT samp_text_title
		FORMAT TEXT
                ON LINE 2 FROM 1
		WITH ( bold   = TRUE             ,
		       width  = title_width      ,
		       value  = samp_text_string )

	prompt_form . add_display ( samp_text_title )


	PROMPT OBJECT samp_desc_title
		FORMAT TEXT
                ON LINE 2 FROM 1
		WITH ( bold   = TRUE             ,
		       width  = title_width      ,
		       value  = samp_desc_string )

	prompt_form . add_display ( samp_desc_title )



	PROMPT OBJECT batch_id
                BROWSE ON job_header . batch_name
                THEN select
                ON LINE 1 FROM title_width + 2
                WITH ( select_array = select_array_batch)


	prompt_form . add_prompt ( batch_id )


	PROMPT OBJECT num_id
                BROWSE ON sample
                ON LINE 2 FROM title_width + 2
                WITH ( enter_prompt_routine = "sample_enter_prompt",
		       vgl_library = GLOBAL ( "current_library" ) ,
		       select_array = select_array)


	prompt_form . add_prompt ( num_id )


	PROMPT OBJECT sample_text
                BROWSE ON sample . id_text
                ON LINE 4 FROM title_width + 2
		WITH ( lowered = TRUE )

	prompt_form . add_display ( sample_text )


	PROMPT OBJECT sample_description
                BROWSE ON sample . id_text
                ON LINE 4 FROM title_width + 2
		WITH ( lowered = TRUE, width = 30 )

	prompt_form . add_display ( sample_description )



        IF GLOBAL ( "TERMTYPE" ) = "GUI" THEN

		prompt_form . button_style = FORM_BUTTON_NONE

		prompt_form . height = 10
		prompt_form . width  = 48

		batch_title . column = 2
		batch_title . row = 1

		batch_id . column = 2
		batch_id . row = 2

		samp_num_title . column = 2
		samp_num_title . row = 4

		num_id . column = 2
		num_id . row = 5

		samp_text_title . column = 2
		samp_text_title . row = 6

		sample_text . column = 2
		sample_text . row = 7

                samp_desc_title . column = 2
                samp_desc_title . row = 8

                sample_description . column = 2
                sample_description . row = 9


		prompt_form . add_frame ( "" , 1 , 1 , 2 , prompt_form . width - 13 )
		prompt_form . add_frame ( "" , 1 , 4 , 6 , prompt_form . width - 13 )

        	PROMPT OBJECT button
                	CLASS "STD_PROMPT_BUTTON"
                	ON LINE 1
	                FROM    prompt_form . width - 10
        	        WITH ( caption      =
			       get_user_message ( "SMP_PROMPT_BUTTON_OK" , 1 ) ,
                	       enabled      = TRUE    ,
			       width        = 10 ,
        	               send_lastkey = "DO"  )

	        prompt_form . add_prompt ( button )

        	PROMPT OBJECT button
                	CLASS "STD_PROMPT_BUTTON"
	                ON LINE 3
                	FROM    prompt_form . width - 10
        	        WITH ( caption      =
			     get_user_message ( "SMP_PROMPT_BUTTON_CANCEL" , 1 ) ,
	                       enabled      = TRUE      ,
			       width        = 10  ,
                	       send_lastkey = "EXIT"  )

	        prompt_form . add_prompt ( button )

	ENDIF

	prompt_form . start_prompt ()

        { Now everythings setup do some prompting }

	prompt_form . wait_prompt ()

	WHILE prompt_form . get_lastkey () <> "EXIT" DO

		sample_text . set_text ( SELECT sample . id_text
					       IN OBJECT num_id )

		sample_description . set_text ( SELECT sample . description
					       IN OBJECT num_id )

		prompt_form . set_enabled ( FALSE )

		SET GLOBAL "PARAM_ACTIVE" TO FALSE

                IF NUMTEXT (num_id . value) THEN

		   result_list_sample ( num_id . value, mode )

                ELSE
                   FLASH_MESSAGE("Sample ID ": STRIP(num_id . value) : " is not numeric", TRUE)
                   RETURN (EMPTY)
                ENDIF

		SET GLOBAL "PARAM_ACTIVE" TO TRUE

		prompt_form . active_prompt = 2

		prompt_form . set_enabled ( TRUE )

		prompt_form . wait_prompt ()

	ENDWHILE

	prompt_form . end_prompt ()

ENDROUTINE

{-----------------------------------------------------------------------------}

ROUTINE call_smrd ( option )

	res_sm_batch ( RE_DISPLAY )

ENDROUTINE

{-----------------------------------------------------------------------------}

ROUTINE call_smre ( option )

	res_sm_batch ( RE_MODIFY )

ENDROUTINE

{-----------------------------------------------------------------------------}

ROUTINE call_smra ( option )

	res_sm_batch ( RE_AUTHORISE )

ENDROUTINE

{-----------------------------------------------------------------------------}


{******************************************************************************
*
* Module Name   : RMB_LOCATION_VIEW.RPF
*
* Purpose       : Template created using RMB_LOCATION.
*                 Receive Sample
*
* Document Ref. :
*
* Specification :
*
* Portability   : Not Checked
*
* Re-entrant    :
*
* Modified by   : Anders Tørnqvist   2010-03-22
*
*******************************************************************************}
SET NAME "DISPLAY/"
SET NOTPROTECTED
ENABLE WINDOWS
SET COMPILE_OPTION DECLARE

JOIN STANDARD_LIBRARY STD_PROMPT
JOIN LIBRARY $PROMPT_LIST
JOIN LIBRARY $TOOLBOX
JOIN LIBRARY $lib_utils
{*****************************************************************************}

ROUTINE sample_select ( explorer_rmb, record_object, collection )

    DECLARE my_form, my_list, location, prompt_1, prompt_2, table

    table = "SAMPLE"

    set_up_std_prompt_list_class ( )

    CREATE OBJECT PROMPT_CLASS_FORM, my_form

    my_form . height = 4
    my_form . width  = 55.5
    my_form . row    = 5
    my_form . column = my_form . width DIV 2
    my_form . header = "Update Location"

    location = SELECT personnel . location_id WHERE identity = OPERATOR

    PROMPT OBJECT prompt_1
        AT 14,1
        BROWSE ON LOCATION

    my_form . add_prompt ( prompt_1 )
    my_form . prompt_objects[1] . value = location
    my_form . add_display ( "Location:", 1, 1, PROMPT_RENDITION_BOLD )

    PROMPT OBJECT prompt_2
        AT 14,2
        BROWSE ON VALID_PHRASE_ID . TANKNUMBER

    my_form . add_prompt ( prompt_2 )
    my_form . prompt_objects[2] . value = ""
    my_form . add_display ( "Tank:", 1, 2, PROMPT_RENDITION_BOLD )

    CREATE OBJECT PROMPT_LIST_CLASS, my_list

    my_list . height = my_form . height - 4
    my_list . width  = my_form . width - 2
    my_list . row    = 4
    my_list . column = 1
    my_list . add_column ( "Sample Id", 12 )
    my_list . add_column ( "Sampling Point", 15 )
    my_list . add_column ( "Location Id", 15 )
    my_list . add_column ( "Tank", 10 )

    sample_insert( explorer_rmb, record_object, collection, table )

    my_form . add_prompt ( my_list )

    my_form . start_prompt ( )
    my_form . wait_prompt ( )

    IF ( my_form . get_lastkey () = "EXIT") THEN

        EXIT

    ENDIF

    update_sample ( explorer_rmb, record_object, collection, table )

    my_form . end_prompt ( )

ENDROUTINE

{*****************************************************************************}

ROUTINE sample_view_select ( explorer_rmb, record_object, collection )

    DECLARE my_form, my_list, location, prompt_1, prompt_2, table

    table = "QC_SAMPLE_VIEW"

    set_up_std_prompt_list_class ( )

    CREATE OBJECT PROMPT_CLASS_FORM, my_form

    my_form . height = 4
    my_form . width  = 55.5
    my_form . row    = 5
    my_form . column = my_form . width DIV 2
    my_form . header = "Update Location"

    location = SELECT personnel . location_id WHERE identity = OPERATOR

    PROMPT OBJECT prompt_1
        AT 14,1
        BROWSE ON LOCATION

    my_form . add_prompt ( prompt_1 )
    my_form . prompt_objects[1] . value = location
    my_form . add_display ( "Location:", 1, 1, PROMPT_RENDITION_BOLD )

    PROMPT OBJECT prompt_2
        AT 14,2
        BROWSE ON VALID_PHRASE_ID . TANKNUMBER

    my_form . add_prompt ( prompt_2 )
    my_form . prompt_objects[2] . value = ""
    my_form . add_display ( "Tank:", 1, 2, PROMPT_RENDITION_BOLD )

    CREATE OBJECT PROMPT_LIST_CLASS, my_list

    my_list . height = my_form . height - 4
    my_list . width  = my_form . width - 2
    my_list . row    = 4
    my_list . column = 1
    my_list . add_column ( "Sample ID", 7 )
    my_list . add_column ( "Text", 18 )
    my_list . add_column ( "Location", 12 )
    my_list . add_column ( "Tank", 10 )

    sample_insert( explorer_rmb, record_object, collection, table )

    my_form . add_prompt ( my_list )

    my_form . start_prompt ( )
    my_form . wait_prompt ( )

    IF ( my_form . get_lastkey () = "EXIT") THEN

        EXIT

    ENDIF

    update_sample ( explorer_rmb, record_object, collection, table )

    my_form . end_prompt ( )

ENDROUTINE

{*****************************************************************************}

ROUTINE sample_insert( explorer_rmb, record_object, collection, table )

    DECLARE  sample_id, samplepoint, location, tank

    collection . set_first()

    WHILE collection . current <> EMPTY DO

        sample_id = SELECT 'table' . sample IN OBJECT collection . current
        location = SELECT sample . location_id WHERE id_numeric = sample_id
        tank = SELECT sample . tank_number WHERE id_numeric = sample_id
        id_text = SELECT sample . id_text WHERE id_numeric = sample_id

        my_list . insert_item ( sample_id, ICON_HAPPY_FACE )
        my_list . set_item ( 2, id_text )
        my_list . set_item ( 3, location )
        my_list . set_item ( 4, tank )        collection . set_next()

    ENDWHILE

ENDROUTINE

{******************************************************************************}

ROUTINE update_sample ( explorer_rmb, record_object, collection, table )

    DECLARE  sample_id, location, tank, id

    collection . set_first()

    WHILE collection . current <> EMPTY DO

        sample_id = SELECT 'table' . sample IN OBJECT collection . current

        location = my_form . prompt_objects[1] . value

        tank = my_form . prompt_objects[2] . value

        id = SELECT sample.id_numeric for update WHERE id_numeric = sample_id

        ASSIGN sample . location_id = location

        ASSIGN sample . tanknumber = tank

        ASSIGN sample . date_started = now

        ASSIGN sample . starter = OPERATOR

        start write transaction "update"

        CHANGE sample STATUS TO "V"

        UPDATE sample

        COMMIT

        collection . set_next()

    ENDWHILE

ENDROUTINE

{******************************************************************************}
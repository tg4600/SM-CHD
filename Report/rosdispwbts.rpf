{SMP$REPORTS:ROSPRIWBTS.RPF}
{------------------------------------------------------------------------------}
{  CHG          DATE    PGMR    DESCRIPTION                                    }
{------------------------------------------------------------------------------}
{**A00??        210493  LPE     Print Worksheet by testschedule                }

JOIN LIBRARY $WKSBROWSE
JOIN STANDARD_LIBRARY STD_FLAGS

ENABLE WINDOWS

SET NAME "DISPLAY/"

sched_worksheet_type = "$SCHEDULE"

CONSTANT sched_idv = "SCHED_WORKSHEET"
CONSTANT sched_works_idv = "SCHEDWKS"
CONSTANT sched_ext = ".SCW"


CONSTANT samp_id = 1
CONSTANT samp_text = 2

CONSTANT anal_id = 1
CONSTANT anal_descrip = 2
CONSTANT anal_type = 3
CONSTANT instrument = 4
CONSTANT expdur = 5
CONSTANT readdate = 6
CONSTANT all_info1 = 7
CONSTANT all_info2 = 8

ARRAY anal_info
ARRAY samp_info

initialise()


IF (get_worksheet_id()=TRUE)

   get_info ()

   display_wks()

ENDIF


ROUTINE initialise

      SET FORMAT ("99999999")
      wks_extension = sched_ext
      idv_name = sched_works_idv

CREATE TEXT WINDOW prompt_win
      HEIGHT 5
      WIDTH 46
      BORDER =""

CREATE TEXT WINDOW temp_win
      HEIGHT 19
      WIDTH 80
      BORDER =""

CREATE TEXT WINDOW error_box
     HEIGHT 1
     WIDTH 80

ENDROUTINE

ROUTINE error_prompt

  PASTE TEXT WINDOW error_box ON LINE 24 FROM 1
  pause()
  UNPASTE TEXT WINDOW error_box
  CLEAR SCREEN IN WINDOW error_box

ENDROUTINE


ROUTINE display_wks
   SET WIDTH 80
   SET PRINTERCODES TRUE

LITERAL
Testschedule Worksheet : $wks_name____________________

Date Start Test : $wks_date______ Operator : $wks_oper______


Samples on Worksheet
----------------------------------------------------------------------
| Numeric ID          | Text ID                                      |
----------------------|-----------------------------------------------
$ENDLITERAL
   count = 1
   WHILE count <=number_of_samp
         cur_samp_id = samp_info [count,samp_id]
         cur_txt_id = samp_info [count,samp_text]
LITERAL
|$cur_samp_id________ | $cur_txt_id__________________________________|
$ENDLITERAL
         count = count + 1
   ENDWHILE
LITERAL
----------------------------------------------------------------------
$ENDLITERAL

LITERAL

--------------------------------------------------------------------------------
|ANALYSIS   |DESCRIPTION                                                       |
------------|-------------------------------------------------------------------
$ENDLITERAL
   count = 1
   WHILE count <=number_of_anal
         pr_a_id = anal_info[count,anal_id]
         pr_a_descr = anal_info[count,anal_descrip]
         pr_a_type = anal_info[count,anal_type]
         pr_a_inst = anal_info[count,instrument]
         dur = SUBSTRING(anal_info[count,expdur],2,3)
         pr_a_read = anal_info[count,readdate]
LITERAL
|$pr_a_id___|$pr_a_descr_______________________________________________________|
$ENDLITERAL
         count = count + 1
   ENDWHILE
LITERAL
--------------------------------------------------------------------------------
$ENDLITERAL
ENDROUTINE

ROUTINE read_worksheet_file
   anal_count = 0
   samp_count = 0
   FILE OPEN wks_file,success
   IF success = EMPTY THEN
      FILE READ wks_file,wks_type,success
      FILE READ wks_file,wks_sname,success
      FILE READ wks_file,wks_oper,success
      FILE READ wks_file,wks_date,success
      FILE READ wks_file,sign,success
      IF sign ="*A" THEN
         REPEAT
            anal_count = anal_count + 1
            FILE READ wks_file,anal_info [anal_count,anal_id],success
            sign = anal_info[anal_count,anal_id]
         UNTIL (sign = "*S") OR (success <> EMPTY)
      ENDIF
      number_of_anal = anal_count - 1
      IF (sign = "*S") OR (success <> EMPTY) THEN
         REPEAT
            samp_count = samp_count + 1
            FILE READ wks_file, samp_info[samp_count,samp_id], success
         UNTIL (success <> EMPTY)
      ENDIF
      number_of_samp = samp_count - 1
      FILE CLOSE wks_file, success
   ELSE

   ENDIF
ENDROUTINE

ROUTINE get_info
   samp_count = 1
   anal_count = 1
   WHILE samp_count <= number_of_samp DO
      samp_info[samp_count,samp_text] = SELECT sample.id_text
                             WHERE id_numeric = samp_info[samp_count,samp_id]

      samp_count = samp_count + 1
   ENDWHILE

   samp_count = samp_count - 1
   WHILE anal_count <= number_of_anal DO
         anal_info [anal_count, anal_descrip] = SELECT analysis.description
                             WHERE identity = anal_info[anal_count,anal_id]

         anal_info [anal_count, anal_type]  = SELECT analysis.analysis_type
{         anal_info [anal_count, instrument] = SELECT analysis.insttype}
         anal_info [anal_count, instrument] = SELECT analysis.insttype_id

{         anal_info [anal_count, expdur]     = SELECT analysis.duration }
         anal_info [anal_count, expdur]     = SELECT analysis.expected_time

         anal_info [anal_count, readdate]   = DATE (wks_date) +
                          INTERVAL(anal_info [anal_count,expdur]) {**MIG}

         anal_count = anal_count + 1
   ENDWHILE
ENDROUTINE

ROUTINE get_worksheet_id

  PASTE TEXT WINDOW prompt_win ON LINE 10 FROM 20
  DISPLAY "      PRINTING WORKSHEET BY TESTSCHEDULE      "
      ON LINE 1 FROM 1 INVERSE IN WINDOW prompt_win
  DISPLAY "Enter Worksheet name : " ON LINE 3 FROM 2
      IN WINDOW prompt_win
  DISPLAY "              Press EXIT to Quit              "
      ON LINE 5 FROM 1 INVERSE IN WINDOW prompt_win

  return_value = TRUE

  REPEAT
    success = EMPTY
    wks_name = " "
    wks_name = prompt_for_worksheet ( "SCHEDWKS",prompt_win,25,3)

    IF (wks_name = empty) OR (lastkey = "EXIT") THEN
      return_value = FALSE
    ELSE

      wks_file = "SMP$WORKSHEETS:":strip(wks_name):sched_ext

      file open wks_file, success

      IF success <> empty THEN
        DISPLAY "Worksheet could not be found"
          IN WINDOW error_box ON LINE 1 FROM 1 To 80
        error_prompt()
      ENDIF
    ENDIF

  UNTIL (return_value = FALSE) OR (success = empty)

  IF (return_value = TRUE) THEN
    anal_count = 0
    samp_count = 0

    FILE READ wks_file,wks_type,success
    FILE READ wks_file,wks_sname,success
    FILE READ wks_file,wks_oper,success
    FILE READ wks_file,wks_date,success
    FILE READ wks_file,sign,success

    IF success = empty THEN

      IF wks_type = sched_worksheet_type THEN

        return_value = true

        IF sign ="*A" THEN
          REPEAT
            anal_count = anal_count + 1
            FILE READ wks_file,anal_info [anal_count,anal_id],success
            sign = anal_info[anal_count,anal_id]
          UNTIL (sign = "*S") OR (success <> EMPTY)
        ENDIF
        number_of_anal = anal_count - 1

        IF (sign = "*S") OR (success <> EMPTY) THEN
          REPEAT
            samp_count = samp_count + 1
            FILE READ wks_file, samp_info[samp_count,samp_id], success
          UNTIL (success <> EMPTY)
        ENDIF
        number_of_samp = samp_count - 1

        FILE CLOSE wks_file, success
      ELSE

        display GET_USER_MESSAGE("PRANALWKS_INVAL_WKS",1):" ":wks_type
          in window error_box on line 1 from 1
        error_prompt()
        return_value = false

      ENDIF

    ELSE

      display GET_USER_MESSAGE("PRANALWKS_DISPLAY_9" ,1): success
        in window error_box on line 1 from 1 bold
      error_prompt()
      return_value = false

    ENDIF

    file close wks_file,success

  ENDIF

RETURN ( return_value )

ENDROUTINE


{***********************************************************************
* Module Name   : SAP_SEND_JOB
* Purpose       : Find a job and send status to SAP
* Document Ref  :
* Specification : N/a
*
************************************************************************
* Modification History
*
* Version   Date        Author          Modify Details
************************************************************************
* 1.0       2009-05-14  Tommy Bøgeskov  Copy from MES_SEND_JOB
************************************************************************}

JOIN STANDARD_LIBRARY STD_UTILS
JOIN STANDARD_LIBRARY STD_PROMPT

JOIN LIBRARY $LIB_UTILS
JOIN LIBRARY SAP_TRANSFER2

SET NOTPROTECTED
SET NAME "DEFER/"
SET COMPILE_OPTION DECLARE
ENABLE WINDOWS

{*************************************************************************
*For testing
*************************************************************************}
FindJob()
{*************************************************************************
END For testing
*************************************************************************}

GLOBAL ROUTINE FindJob
{*************************************************************************
* Purpose       : Main routine. Request a form and handles result.
* Parameters    : None
* Return Value  : None
*************************************************************************}
DECLARE form, job_count, tmpJobid, JobStatus

form = CreateForm ()

REPEAT
    form . start_prompt()
    form . wait_prompt()
    form . end_prompt()

        IF form.get_last_key ( ) = "DO" THEN
            tmpJobid  = form . prompt_objects[1] . value
            job_count = SELECT COUNT JOB_HEADER
                        WHERE job_name = tmpJobid
            IF job_count > 0 THEN
                JobStatus = SELECT job_header.job_status WHERE job_name = tmpJobID
                IF JobStatus = "A" THEN
                    SendJobStatus(tmpJobid)
                ELSE
                    SendEndDate(tmpJobid)
                ENDIF
            ELSE
                FM("Not a job: ": tmpJobid)
            ENDIF
        ENDIF
UNTIL form.get_last_key ( ) = "EXIT"

ENDROUTINE

ROUTINE CreateForm
{*************************************************************************
* Purpose       : Creates a from and returns it.
* Parameters    : None
* Return Value  : Form as object
*************************************************************************}
DECLARE job_prompt, form

CREATE OBJECT PROMPT_CLASS_FORM,form

form . height = 3
form . width = 25
form . row = 2
form . column = 5
form . border = TRUE
form . header = "Find Job"
form . footer = "Press <Exit> to quit"

PROMPT OBJECT job_prompt
BROWSE ON JOB_HEADER . JOB_NAME
ON LINE 1 FROM 8

form . add_prompt(job_prompt)
form . add_display("Job: ", 1, 1, PROMPT_RENDITION_BOLD)

RETURN (form)

ENDROUTINE

{*************************************************************************}
GLOBAL ROUTINE SendJobToMes(VALUE JobId)
{
*
* Purpose       : Send the found job to MES_TRANSFER
*
* Parameters    : Job header identity
*
* Return Value  : None
*
*************************************************************************}
DECLARE JobStatus

JobStatus = SELECT job_header.job_status WHERE job_name = JobID

IF JobStatus = "A" THEN

    CALL_ROUTINE "SendJobStatus"
        USING JobId
        IN LIBRARY "SAP_TRANSFER2"

ELSE


    CALL_ROUTINE "SendEndDate"
        USING JobId
        IN LIBRARY "SAP_TRANSFER2"


ENDIF

ENDROUTINE

{*************************************************************************}
GLOBAL ROUTINE RMBSendJobToSap(rmb_object, object , collection)
{
* Purpose       : Send the found job to MES_TRANSFER
* Parameters    : Job header identity
* Return Value  : None
*************************************************************************}
    DECLARE table, job_id, i, j, AlreadyInArray, ArrJobs, JobStatus
    ARRAY ArrJobs  ARRAY_SIZE(0,2)

    table = "QC_SAMPLE_VIEW"

    collection . set_first()
    i=0
    WHILE collection . current <> EMPTY DO
        job_id = SELECT 'table' . job IN OBJECT collection . current
        AlreadyInArray = FALSE
        j = 1
        WHILE j < size_of_array(ArrJobs) + 1
            IF ArrJobs [i, 2] = job_id THEN
                AlreadyInArray = TRUE
            ENDIF
            j = j +1
        ENDWHILE

        IF NOT AlreadyInArray THEN
            i = size_of_array(ArrJobs) + 1
            ArrJobs [i, 1] = i
            ArrJobs [i, 2] = job_id
        ENDIF
        collection . set_next()
    ENDWHILE

    i = 1
    WHILE ArrJobs [i, 1] <> EMPTY DO
        JobStatus = SELECT job_header.job_status WHERE job_name = JobID

        IF JobStatus = "A" THEN

            CALL_ROUTINE "SendJobStatus"
                USING JobId
                IN LIBRARY "SAP_TRANSFER2"

        ELSE


            CALL_ROUTINE "SendEndDate"
                USING JobId
                IN LIBRARY "SAP_TRANSFER2"


        ENDIF

        i = i + 1
    ENDWHILE

ENDROUTINE

{*************************************************************************}
GLOBAL ROUTINE RMBJobheaderToSap(rmb_object, object , collection)
{
* Purpose       : Send the found job to MES_TRANSFER
* Parameters    : Job header identity
* Return Value  : None
*************************************************************************}
    DECLARE table, job_id, i, j, AlreadyInArray, ArrJobs, JobStatus
    ARRAY ArrJobs  ARRAY_SIZE(0,2)

    table = "JOB_HEADER"

    collection . set_first()
    i=0
    WHILE collection . current <> EMPTY DO
        job_id = SELECT 'table'.job_name IN OBJECT collection . current
        AlreadyInArray = FALSE
        j = 1
        WHILE j < size_of_array(ArrJobs) + 1
            IF ArrJobs [i, 2] = job_id THEN
                AlreadyInArray = TRUE
            ENDIF
            j = j +1
        ENDWHILE

        IF NOT AlreadyInArray THEN
            i = size_of_array(ArrJobs) + 1
            ArrJobs [i, 1] = i
            ArrJobs [i, 2] = job_id
        ENDIF
        collection . set_next()
    ENDWHILE

    i = 1
    WHILE ArrJobs [i, 1] <> EMPTY DO
        JobStatus = SELECT job_header.job_status WHERE job_name = JobID

        IF JobStatus = "A" THEN

            CALL_ROUTINE "SendJobStatus"
                USING JobId
                IN LIBRARY "SAP_TRANSFER2"

        ELSE


            CALL_ROUTINE "SendEndDate"
                USING JobId
                IN LIBRARY "SAP_TRANSFER2"


        ENDIF

        i = i + 1
    ENDWHILE

ENDROUTINE
{*************************************************************************}
{*************************************************************************}

GLOBAL ROUTINE RMB_SJS(tmpJobid)

DECLARE job_count, JobStatus

            job_count = SELECT COUNT JOB_HEADER
                        WHERE job_name = tmpJobid
            IF job_count > 0 THEN
                JobStatus = SELECT job_header.job_status WHERE job_name = tmpJobID
                IF JobStatus = "A" THEN
                    SendJobStatus(tmpJobid)
                ELSE
                    SendEndDate(tmpJobid)
                ENDIF
            ELSE
                FM("Not a job: ": tmpJobid)
            ENDIF

ENDROUTINE
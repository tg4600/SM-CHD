{**1398 HBe 12-6-02: NEW PROGRAM}

SET NAME "DISPLAY/"

{SET COMPILE_OPTION DECLARE}

ENABLE WINDOWS

JOIN LIBRARY $LIB_UTILS
JOIN STANDARD_LIBRARY std_utils
JOIN LIBRARY TOOLBOX

DECLARE smp_id, ok, local_call
ARRAY sel_arr


fm("Change Date Result Required (CRR), does not work any longer!":ASCII(10):ASCII(10):
   "Instead you should add an incident to the job/sample,":ASCII(10):
   "using TEMPLATE_ID:":ASCII(10):
   "A-RDA_EVAL, DATE_EXP_JOB, DATE_EXP_POST, ":ASCII(10):
   "DATE_EXP_SAMPLE, HH_EVAL or HHN_DATE_EXP")
RETURN

smp_id   = EMPTY
new_date = EMPTY


      sel_arr[1,1] = ARRAY_SELECT_EQ
      sel_arr[1,2] = "STATUS"
      sel_arr[1,3] = "V"
      sel_arr[2,1] = ARRAY_SELECT_OR
      sel_arr[3,1] = ARRAY_SELECT_EQ
      sel_arr[3,2] = "STATUS"
      sel_arr[3,3] = "C"


IF prompt_user ( "sample", "Change date result required for a sample",
                               EMPTY,
                               TRUE, "Select sample to be changed",
                               sel_arr, smp_id, l_k_m )
THEN
   IF NOT ((STRIP(smp_id) <> EMPTY) AND (STRIP(smp_id) <> "")) THEN
     FLASH_MESSAGE("No sample ID was selected.",TRUE)
     EXIT
   ENDIF
ELSE
   EXIT
ENDIF


change_date_res_req(smp_id, TRUE)


{**AS1439 HBe 11-12-2002: Creating as separate global routine for use from $TEST_ASSN}

GLOBAL ROUTINE change_date_res_req (VALUE smp_id, VALUE local_call)

{**AE1439}

START READ TRANSACTION "get_old_date"

old_date = SELECT sample.dateresreq FOR UPDATE
            WHERE  id_numeric = smp_id

IF   old_date = LOCKED
THEN
   FLASH_MESSAGE("Date Could not be updated - Record locked", TRUE)
{**AS1439:External call performs commit}
   IF local_call THEN
{**AE1439}
      COMMIT
      EXIT
{**AS1439:External call performs commit}
   ENDIF
{**AE1439}
ENDIF

change_dateresreq_form ( form , new_date, smp_id, old_date )

   IF ((new_date = EMPTY) or (BLANK(new_date)))  THEN
      FLASH_MESSAGE("No new date selected. Exiting.", TRUE)
      RETURN(EMPTY)
   ENDIF

   change_date (smp_id, new_date, old_date )


{**AS1439 HBe 11-12-2002}

ENDROUTINE

{AE1439}

{******************************************************************************}

ROUTINE change_dateresreq_form ( form , new_date, smp_id, VALUE old_date )

{
*
*
*****************************************************************************}


    DECLARE prompt_object


    PROMPT OBJECT form CLASS "STD_FORM"

        form . header           = "Change 'Date results required' for sample ":smp_id
        form . row              = 10
        form . column           = 10
        form . height           = 6
        form . width            = 50
        form . button_style     = FORM_BUTTON_NONE
        form . return_behaviour = FORM_RETURN_STAY


        PROMPT OBJECT prompt_object CLASS "STD_PROMPT_TEXT"
        prompt_object . value   = "Current 'Date results required' saved: " : SUBSTRING(old_date,1,11)
        prompt_object . row       = 1
        prompt_object . column      = 1
        prompt_object . height        = 1
        prompt_object . width           = 48
        prompt_object . FOREGROUND_COLOUR = PROMPT_COLOUR_BLUE

        form . add_display ( prompt_object )


        PROMPT OBJECT prompt_object CLASS "STD_PROMPT_TEXT"
        prompt_object . value   = "New End Date : "
        prompt_object . row     = 3
        prompt_object . column  = 1
        prompt_object . height  = 1
        prompt_object . width   = 25

        form . add_display ( prompt_object )




        PROMPT OBJECT prompt_object CLASS "STD_PROMPT_TEXT_DATE"
        prompt_object . row            = 3
        prompt_object . column         = 18
        prompt_object . height         = 1
        prompt_object . width          = 21
        prompt_object . allow_date     = TRUE
        prompt_object . allow_time     = FALSE
        prompt_object . allow_interval = FALSE

        form . add_prompt ( prompt_object )


        PROMPT OBJECT prompt_object CLASS "STD_PROMPT_BUTTON"
        prompt_object . caption      = get_user_message ( "SMP_PROMPT_BUTTON_OK" , 1 )
        prompt_object . row          = 5
        prompt_object . column       = 10
        prompt_object . height       = 1
        prompt_object . width        = 10
        prompt_object . send_lastkey = "DO"

        form . add_prompt ( prompt_object )

        PROMPT OBJECT prompt_object CLASS "STD_PROMPT_BUTTON"
        prompt_object . caption      = "Cancel"
        prompt_object . row          = 5
        prompt_object . column       = 30
        prompt_object . height       = 1
        prompt_object . width        = 10
        prompt_object . send_lastkey = "EXIT"

        form . add_prompt ( prompt_object )


        form . start_prompt ()
        form . wait_prompt ()
        form . end_prompt ()

        new_date   = form . prompt_objects [1] . value

        lk1 = form . get_lastkey ()

        IF lk1 = "EXIT" THEN
{**M1439: Not exit but return empty for lk1=EXIT
           EXIT
}
           new_date = old_date
           cont = FALSE
           RETURN(empty)
        ELSEIF lk1 = "ENTER" THEN
           Cont = TRUE
        ELSEIF lk1 = "DO" THEN
           Cont = TRUE
        ELSE
           cont = FALSE
           FLASH_MESSAGE("Error! Lastkey not Enter, Do or Exit but = ":strip(lk1),TRUE)
        ENDIF



ENDROUTINE

{******************************************************************************}



{----------------------------------------------------------------------------------------------------------}

ROUTINE change_date ( smp_id, new_date, old_date )



IF new_date = old_date
THEN
   FLASH_MESSAGE("New and old dates are identical - No update made.", TRUE)
{**AS1439 HBe 11-12-02}
   IF local_Call then
{**AE1439}
      COMMIT
{**AS1439 HBe 11-12-02}
   ENDIF
{**AE1439}

ELSE

   ASSIGN sample.dateresreq = new_date

{**AS1439 HBe 11-12-02}
   IF local_Call then
{**AE1439}

      START WRITE TRANSACTION "update_smp"

      UPDATE sample

      COMMIT

{**AE1439 HBe 11-12-02}
   ENDIF
{**AE1439}


      FLASH_MESSAGE("Date Results Required will be set to ": SUBSTRING(new_date,1,11) : ". ", TRUE)

ENDIF


ENDROUTINE

{----------------------------------------------------------------------------------------------------------}



{******************************************************************************
*
* Module Name   : $LIMSML_TEST
*
* Purpose       :
*
*******************************************************************************}

SET NOTPROTECTED
SET COMPILE_OPTION DECLARE
SET NAME "DEFER/"

ENABLE WINDOWS

JOIN LIBRARY $LIMSML_TESTER

JOIN LIBRARY $LIMSML_HELPER
JOIN LIBRARY $LIMSML_SMADO

{Debug from $LIMSML_PROCESS 262}

limsml_helper_define_class()

test_limsml( )

{******************************************************************************}

ROUTINE test_limsml

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE tester, limsml

    limsml_tester_initialisation( )

    CREATE OBJECT "LIMSML_TESTER", tester
    
    limsml = get_limsml_tommy( )
    tester . add_request( "TOMMY()", limsml ) 

    limsml = get_limsml_system_ping( )
    tester . add_request( "SYSTEM_PING()", limsml )

{**************************************************************************************************************
    tester . go( )

    EXIT
 ***************************************************************************************************************}
    
    limsml = get_limsml_generic_find( "VGL_LIBRARY" )
    tester . add_request( "GENERIC_FIND (VGL_LIBRARY)", limsml )

    limsml = get_limsml_generic_get_by_identity( "VGL_LIBRARY", "$ACTIVE" )
    tester . add_request( "GENERIC_GET_BY_IDENTITY (VGL_LIBRARY, $ACTIVE)", limsml )

    limsml = get_limsml_generic_get_by_identity( "SAMPLE", SELECT MAX sample . id_numeric )
    tester . add_request( "GENERIC_GET_BY_IDENTITY (SAMPLE, <highest id numeric>)", limsml )

    limsml = get_limsml_generic_browse( "SAMPLE_TEMPLATE", 1, 5, "IDENTITY", "", "", "", "", "", FALSE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (SAMPLE_TEMPLATE, 1, 5, IDENTITY, , , , , , FALSE, TRUE, , FALSE, )", limsml )

    limsml = get_limsml_generic_browse( "VGL_LIBRARY", 2, 5, "IDENTITY", "$LIB", "", "", "", "", FALSE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (VGL_LIBRARY, 2, 5, IDENTITY, $LIB, , , , , FALSE, TRUE, , FALSE, )", limsml )

    limsml = get_limsml_generic_browse( "ANALYSIS", 1, 30, "IDENTITY", "", "", "", "", "", FALSE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (ANALYSIS, 1, 30, IDENTITY, , , , , , FALSE, TRUE, , FALSE, )", limsml)

    limsml = get_limsml_generic_browse( "ANALYSIS_COMPONENT_LIST", 1, 15, "COMP_LIST", "", "ANALYSIS", "PH", "ANALYSIS_VERSION", 1, FALSE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (ANALYSIS_COMPONENT_LIST, 1, 15, COMP_LIST, , ANALYSIS, PH, ANALYSIS_VERSION, 1, FALSE, TRUE, , FALSE, )", limsml )

    limsml = get_limsml_generic_browse( "SAMPLE", 1, 15, "ID_NUMERIC", "", "", "", "", "", FALSE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (SAMPLE, 1, 15, ID_NUMERIC, , , , , , FALSE, TRUE, , FALSE, )", limsml )

    limsml = get_limsml_generic_browse( "SAMPLE", 1, 15, "HAZARD", "", "", "", "", "", FALSE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (SAMPLE, 1, 15, HAZARD, , , , , , FALSE, TRUE, , FALSE, )", limsml )

    limsml = get_limsml_generic_browse_count( "VGL_LIBRARY", "IDENTITY", "$LIB", "", "", "", "", FALSE, TRUE, "" )
    tester . add_request( "GENERIC_BROWSE_COUNT (VGL_LIBRARY, IDENTITY, $LIB, , , , , FALSE, TRUE)", limsml )

    limsml = get_limsml_generic_browse_count( "ANALYSIS_COMPONENT_LIST", "COMP_LIST", "", "ANALYSIS", "PH", "ANALYSIS_VERSION", 1, FALSE, TRUE, "" )
    tester . add_request( "GENERIC_BROWSE_COUNT (ANALYSIS_COMPONENT_LIST, COMP_LIST, , ANALYSIS, PH, ANALYSIS_VERSION, 1, FALSE, TRUE )", limsml )

    limsml = get_limsml_generic_browse( "ANALYSIS", 1, 0, "IDENTITY", "", "", "", "", "", FALSE, FALSE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (ANALYSIS, 1, 0, IDENTITY, , , , , , highest version, all status)", limsml )

    limsml = get_limsml_generic_browse( "ANALYSIS", 1, 0, "IDENTITY", "", "", "", "", "", FALSE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (ANALYSIS, 1, 0, IDENTITY, , , , , , highest version, only approved )", limsml )

    limsml = get_limsml_generic_browse( "ANALYSIS", 1, 0, "IDENTITY", "", "", "", "", "", TRUE, FALSE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (ANALYSIS, 1, 0, IDENTITY, , , , , , all versions, all status )", limsml )

    limsml = get_limsml_generic_browse( "ANALYSIS", 1, 0, "IDENTITY", "", "", "", "", "", TRUE, TRUE, "", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (ANALYSIS, 1, 0, IDENTITY, , , , , , all versions, only approved )", limsml )

    limsml = get_limsml_generic_browse( "SAMPLE_TEMPLATE", 1, 0, "IDENTITY", "", "", "", "", "", TRUE, False, "", FALSE, "IDENTITY" )
    tester . add_request( "GENERIC_BROWSE (SAMPLE_TEMPLATE, 1, 0, IDENTITY, , , , , , all versions, all status, sort descending, IDENTITY )", limsml )

    limsml = get_limsml_generic_browse( "SAMPLE_TEMPLATE", 1, 0, "IDENTITY", "", "", "", "", "", TRUE, False, "", TRUE, "IDENTITY" )
    tester . add_request( "GENERIC_BROWSE (SAMPLE_TEMPLATE, 1, 0, IDENTITY, , , , , , all versions, all status, sort ascending, IDENTITY )", limsml )

    {**************************************************
    This test requires a criteria called CRITERIA_TEST
    for sample_template
    **************************************************}
    limsml = get_limsml_generic_browse( "SAMPLE_TEMPLATE", 1, 0, "IDENTITY", "", "", "", "", "", TRUE, False, "CRITERIA_TEST", FALSE, "" )
    tester . add_request( "GENERIC_BROWSE (SAMPLE_TEMPLATE, 1, 0, IDENTITY, , , , , , all versions, all status, CRITERIA_TEST )", limsml )

    limsml = get_limsml_generic_browse_count( "ANALYSIS", "IDENTITY", "", "", "", "", "", FALSE, FALSE, "" )
    tester . add_request( "GENERIC_BROWSE_COUNT (ANALYSIS, IDENTITY, , , , , , highest version, all status)", limsml )

    limsml = get_limsml_generic_browse_count( "ANALYSIS", "IDENTITY", "", "", "", "", "", FALSE, TRUE, "" )
    tester . add_request( "GENERIC_BROWSE_COUNT (ANALYSIS, IDENTITY, , , , , , highest version, only approved )", limsml )

    limsml = get_limsml_generic_browse_count( "ANALYSIS", "IDENTITY", "", "", "", "", "", TRUE, FALSE, "" )
    tester . add_request( "GENERIC_BROWSE_COUNT (ANALYSIS, IDENTITY, , , , , , all versions, all status )", limsml )

    limsml = get_limsml_generic_browse_count( "ANALYSIS", "IDENTITY", "", "", "", "", "", TRUE, TRUE, "" )
    tester . add_request( "GENERIC_BROWSE_COUNT (ANALYSIS, IDENTITY, , , , , , all versions, only approved )", limsml )

    {**************************************************
    This test requires a criteria called CRITERIA_TEST
    for sample_template
    **************************************************}
    limsml = get_limsml_generic_browse_count( "SAMPLE_TEMPLATE", "IDENTITY", "", "", "", "", "", TRUE, FALSE, "CRITERIA_TEST" )
    tester . add_request( "GENERIC_BROWSE_COUNT (SAMPLE_TEMPLATE, IDENTITY, , , , , , all versions, all status, CRITERIA_TEST)", limsml )

    limsml = get_limsml_generic_get_related_items( "PHRASE", "SAMP_STAT", 1, "PHRASE_ENTRY", FALSE )
    tester . add_request( "GENERIC_GET_RELATED_ITEMS (PHRASE, SAMP_STAT, 1, PHRASE_ENTRY, FALSE)", limsml )

    limsml = get_limsml_generic_get_related_items( "ANALYSIS", "PH", 1, "ANALYSIS_COMPONENT", FALSE )
    tester . add_request( "GENERIC_GET_RELATED_ITEMS (ANALYSIS, PH, 1, ANALYSIS_COMPONENT, FALSE)", limsml )

    limsml = get_limsml_generic_get_related_items( "SAMPLE", 1, 1, "SAMPLE_TEST", FALSE )
    tester . add_request( "GENERIC_GET_RELATED_ITEMS( SAMPLE, 1, 1, SAMPLE_TEST, FALSE )", limsml )

    limsml = get_limsml_generic_get_related_items( "TEST", 1, 1, "SAMPLE_TEST", TRUE )
    tester . add_request( "GENERIC_GET_RELATED_ITEMS( TEST, 1, 1, SAMPLE_TEST, TRUE )", limsml )

    limsml = get_limsml_generic_get_related_items( "VGL_LIBRARY", "$ARCHIVE", 1, "VGL_LIBRARY_GROUP_ID", FALSE )
    tester . add_request( "GENERIC_GET_RELATED_ITEMS( VGL_LIBRARY, ARCHIVE, 1, VGL_LIBRARY_GROUP_ID, FALSE )", limsml )

    limsml = get_limsml_generic_get_columns( "SAMPLE", TRUE )
    tester . add_request( "GENERIC_GET_COLUMNS( SAMPLE, TRUE { all columns flag } )", limsml )

    limsml = get_limsml_generic_get_columns( "SAMPLE", FALSE )
    tester . add_request( "GENERIC_GET_COLUMNS( SAMPLE FALSE { all columns flag } )", limsml )

    limsml = get_limsml_generic_set_columns( "SAMPLE" )
    tester . add_request( "GENERIC_SET_COLUMNS( SAMPLE )", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "DEFAULT", 1 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( DEFAULT, 1 )", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "DEFAULT", 2 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( DEFAULT, 2 )", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "LABORATORY", 7 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( LABORATORY, 7 )", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "LABTABLE", 1 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( LABTABLE, 7 )", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "SYSTEM", 7 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( SYSTEM, 7 ) [Master Menu]", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "USER", 1 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( USER, 1 ) [Favourites]", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "WEB", 1 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( WEB, 1 ) [My Data Authorised Samples]", limsml )

    limsml = get_limsml_explorer_folder_get_contents( "WEB", 2 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENTS( WEB, 2 ) [My Data complete Samples]", limsml )

    limsml = get_limsml_explorer_folder_get_content_count( "DEFAULT", 1 )
    tester . add_request( "EXPLORER_FOLDER_GET_CONTENT_COUNT( DEFAULT, 1 )", limsml )

    limsml = get_limsml_infomaker_report_get_parameters( "R_ACTIVE_SAMPLES" )
    tester . add_request( "INFOMAKER_REPORT_GET_PARAMETERS( R_ACTIVE_SAMPLES )", limsml )

    limsml = get_limsml_infomaker_report_get_parameters( "R_OPERATOR_INTERVAL_COMPOSITE" )
    tester . add_request( "INFOMAKER_REPORT_GET_PARAMETERS( R_OPERATOR_INTERVAL_COMPOSITE )", limsml )

    limsml = get_limsml_infomaker_report_generate( "R_ACTIVE_SAMPLES", "DEFAULT", EMPTY )
    tester . add_request( "INFOMAKER_REPORT_GENERATE( R_ACTIVE_SAMPLES, DEFAULT, EMPTY )", limsml )

    limsml = get_limsml_analysis_get_components( "PH" )
    tester . add_request( "ANALYSIS_GET_COMPONENTS( PH )", limsml )

    limsml = get_limsml_sample_template_get_fields( "TEST" )
    tester . add_request( "SAMPLE_TEMPLATE_GET_FIELDS( TEST )", limsml )

    limsml = get_limsml_sample_template_get_fields( "BLANK" )
    tester . add_request( "SAMPLE_TEMPLATE_GET_FIELDS( BLANK )", limsml )

    limsml = get_limsml_job_template_get_fields( "DEFAULT" )
    tester . add_request( "JOB_TEMPLATE_GET_FIELDS( DEFAULT )", limsml )

    limsml = get_limsml_user_login( )
    tester . add_request( "USER_LOGIN( )", limsml )

    limsml = get_limsml_test_schedule_get_contents( "TESTSCHED1" )
    tester . add_request( "TEST_SCHEDULE_GET_CONTENTS( TESTSCHED1 )", limsml )

    limsml = get_limsml_user_interface_get_fields( "SAMPLE", "WEB_PROPERTY_DETAILS" )
    tester . add_request( "USER_INTERFACE_GET_FIELDS( SAMPLE, WEB_PROPERTY_DETAILS)", limsml )

    limsml = get_limsml_user_interface_get_fields( "WEB_MENU_SECTION", "DEFAULT" )
    tester . add_request( "USER_INTERFACE_GET_FIELDS( WEB_MENU_SECTION, DEFAULT )", limsml )

    limsml = get_limsml_user_interface_get_fields( "WEB_MENU_ITEM", "DEFAULT" )
    tester . add_request( "USER_INTERFACE_GET_FIELDS( WEB_MENU_ITEM, DEFAULT )", limsml )

    limsml = get_limsml_user_interface_validate_values( "WEB_MENU_SECTION", "DEFAULT" )
    tester . add_request( "USER_INTERFACE_VALIDATE_VALUES( WEB_MENU_SECTION, DEFAULT )", limsml )

    limsml = get_limsml_sample_template_validate_values_blank( )
    tester . add_request( "SAMPLE_TEMPLATE_VALIDATE_VALUES - BLANK", limsml )

    limsml = get_limsml_job_template_validate_values_default( )
    tester . add_request( "JOB_TEMPLATE_VALIDATE_VALUES - DEFAULT", limsml )
    
    limsml = get_limsml_sample_login_request( )
    tester . add_request( "SAMPLE_LOGIN", limsml )

    limsml = get_limsml_sample_login_existing_job_request( )
    tester . add_request( "SAMPLE_LOGIN_EXISTING_JOB ( DEFAULT.1)", limsml )

    limsml = get_limsml_job_login_request( )
    tester . add_request( "JOB_LOGIN", limsml )

    limsml = get_limsml_job_login_with_sample_request( )
    tester . add_request( "JOB_LOGIN_WITH_SAMPLE (WITH_SAMP)", limsml )
    
    limsml = get_limsml_job_login_with_sample_and_test_sched_request( )
    tester . add_request( "JOB_LOGIN_WITH_SAMPLE_AND_TEST_SCHED (WITH_SAMP)", limsml )
    
    limsml = get_limsml_job_login_with_sample_and_spec_anal_request( )
    tester . add_request( "JOB_LOGIN_WITH_SAMPLE_AND_SPEC_ANAL (WITH_SAMP, ANALYSIS01, ANALYSIS02)", limsml )

    limsml = get_criteria_list( "SAMPLE_TEMPLATE" )
    tester . add_request( "CRITERIA_GET( SAMPLE_TEMPLATE )", limsml )

    limsml = add_to_favorites( "SAMPLE_TEMPLATE", "BLANK " )
    tester . add_request( "FAVORITES_ADD( SAMPLE_TEMPLATE, BLANK)", limsml )

    limsml = remove_from_favorites( "SAMPLE_TEMPLATE", "BLANK " )
    tester . add_request( "FAVORITES_REMOVE( SAMPLE_TEMPLATE, BLANK)", limsml )

    limsml = get_sample_results( "25606" )
    tester . add_request( "GET_SAMPLE_RESULTS( 25606 )", limsml )
    
    limsml = add_adhoc_results( "3416" )
    tester . add_request( "ADD_ADHOC_RESULTS( 3416 )", limsml )
    
    limsml = Get_RE_Results( "25784" )
    tester . add_request( "GET_RE_RESULTS( 25784 )", limsml )
    
    limsml = Get_Audits( "3437", "Text" )
    tester . add_request( "GET_AUDITS( 3437, Text )", limsml )
    
    limsml = Get_Components( "25795", "3437", "Text" )
    tester . add_request( "GET_COMPONENTS( 25795, 3437, Text )", limsml )

    limsml = get_generic_create( )
    tester . add_request( "GENERIC_CREATE(PHRASE)", limsml )

    limsml = get_generic_update( )
    tester . add_request( "GENERIC_UPDATE(PHRASE)", limsml )

    limsml = get_search()
    tester . add_request( "GENERIC_SEARCH(PHRASE_ENTRY)", limsml )

    limsml = get_search_count()
    tester . add_request( "GENERIC_SEARCH_COUNT(PHRASE_ENTRY)", limsml )
    
    limsml = get_limsml_sample_login_workflow_request( )
    tester . add_request( "SAMPLE_LOGIN_WORKFLOW", limsml )
    
    limsml = get_limsml_generic_run_workflow_request( "JOB_HEADER", "Single Job", 3)
    tester . add_request( "JOB_CREATE_GENERIC_WORKFLOW", limsml )
    
    limsml = get_limsml_result_entry_workflow_request( "Single Sample", "PH")
    tester . add_request( "RESULT_ENTRY_WORKFLOW_SAMPLE", limsml )

    limsml = get_limsml_generic_run_workflow_request( "LOCATION", "CreateInstrument", 1)
    tester . add_request( "WORKFLOW_ERROR_TABLE", limsml )

    limsml = get_limsml_generic_run_workflow_request( "LOCATION", "Invalid", 1)
    tester . add_request( "WORKFLOW_ERROR_WORKFLOW_NAME", limsml )  

    { SMIM LimsML }

    limsml = smim_analysis_count()
    tester . add_request( "SMIM Analysis Count", limsml )

    limsml = smim_analysis_find()
    tester . add_request( "SMIM Analysis Find", limsml )

    tester . go( )

ENDROUTINE
{******************************************************************************}

ROUTINE get_sample_results( VALUE sample_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( "SAMPLE" )
    action = entity . addaction ("GET_RESULTS")

    action . add_parameter ( "SAMPLE_ID", sample_id )

    RETURN( limsml )

ENDROUTINE


{******************************************************************************}

ROUTINE get_limsml_system_ping

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    entity = limsml . addentity ( "SYSTEM" )

    action = entity . addaction ( "PING" )
    action . add_parameter ( "MESSAGE", "TEST_STRING" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_generic_find( VALUE type_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( type_id )

    action = entity . addaction ("FIND")
    action . add_parameter ( "PAGE"    , 1    )
    action . add_parameter ( "PAGESIZE", 5    )
    action . add_parameter ( "SCHEMA"  , TRUE )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_generic_get_by_identity( VALUE type_id, VALUE item_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( type_id )

    action = entity . addaction ("GET_BY_IDENTITY")
    action . add_parameter ( "IDENTITY", item_id )
    action . add_parameter ( "VERSION", 1 )
    action . add_parameter ( "SCHEMA"  , TRUE )

    RETURN( limsml )

ENDROUTINE


{******************************************************************************}

ROUTINE get_limsml_generic_browse( VALUE type_id            ,
                                   VALUE page_number        ,
                                   VALUE page_size          ,
                                   VALUE browse_property_id ,
                                   VALUE start_text         ,
                                   VALUE filter_1_property  ,
                                   VALUE filter_1_value     ,
                                   VALUE filter_2_property  ,
                                   VALUE filter_2_value     ,
                                   VALUE all_versions       ,
                                   VALUE only_approved      ,
                   VALUE criteria       ,
                   VALUE sort_ascending     ,
                   VALUE sort_by        )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( type_id )

    action = entity . addaction ("BROWSE")
    action . add_parameter ( "PAGE"              , page_number        )
    action . add_parameter ( "PAGESIZE"          , page_size          )
    action . add_parameter ( "SCHEMA"            , TRUE               )
    action . add_parameter ( "FIELD"             , browse_property_id )
    action . add_parameter ( "STARTTEXT"         , start_text         )
    action . add_parameter ( "FILTER_1_PROPERTY" , filter_1_property  )
    action . add_parameter ( "FILTER_1_VALUE"    , filter_1_value     )
    action . add_parameter ( "FILTER_2_PROPERTY" , filter_2_property  )
    action . add_parameter ( "FILTER_2_VALUE"    , filter_2_value     )
    action . add_parameter ( "ALL_VERSIONS"      , all_versions       )
    action . add_parameter ( "ONLY_APPROVED"     , only_approved      )
    action . add_parameter ( "CRITERIA"          , criteria           )
    action . add_parameter ( "SORT_ASCENDING"    , sort_ascending     )
    action . add_parameter ( "SORT_BY"           , sort_by        )


    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_generic_browse_count( VALUE type_id            ,
                                         VALUE browse_property_id ,
                                         VALUE start_text         ,
                                         VALUE filter_1_property  ,
                                         VALUE filter_1_value     ,
                                         VALUE filter_2_property  ,
                                         VALUE filter_2_value     ,
                                         VALUE all_versions       ,
                                         VALUE only_approved      ,
                     VALUE criteria           )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    entity = limsml . addentity ( type_id )

    action = entity . addaction ("BROWSE_COUNT")
    action . add_parameter ( "FIELD"             , browse_property_id )
    action . add_parameter ( "STARTTEXT"         , start_text         )
    action . add_parameter ( "FILTER_1_PROPERTY" , filter_1_property  )
    action . add_parameter ( "FILTER_1_VALUE"    , filter_1_value     )
    action . add_parameter ( "FILTER_2_PROPERTY" , filter_2_property  )
    action . add_parameter ( "FILTER_2_VALUE"    , filter_2_value     )
    action . add_parameter ( "ALL_VERSIONS"      , all_versions       )
    action . add_parameter ( "ONLY_APPROVED"     , only_approved      )
    action . add_parameter ( "CRITERIA"          , criteria           )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_generic_get_related_items( VALUE type_id         ,
                                              VALUE identity        ,
                                              VALUE version_num     ,
                                              VALUE relationship_id ,
                                              VALUE is_inverted     )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( type_id )

    action = entity . addaction ("GET_RELATED_ITEMS")
    action . add_parameter ( "IDENTITY"             , identity        )
    action . add_parameter ( "VERSION"              , version_num     )
    action . add_parameter ( "RELATIONSHIP_ID"      , relationship_id )
    action . add_parameter ( "INVERSE_RELATIONSHIP" , is_inverted     )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_generic_get_columns( VALUE type_id, VALUE all_columns )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( type_id )
    action = entity . addaction ("GET_COLUMNS")

    action . add_parameter ( "AVAILABLE", all_columns )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_generic_set_columns( VALUE type_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( type_id )

    entity . addaction ("SET_COLUMNS")
    entity . field_in( "ID_NUMERIC" , "ID Numeric" )
    entity . field_in( "ID_TEXT"    , "ID Text" )
    entity . field_in( "STATUS"     , "Current Status" )
    entity . field_in( "LOGIN_BY"   , "Logged in by" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_explorer_folder_get_contents( VALUE cabinet_id,
                                                 VALUE folder_number )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("EXPLORER_FOLDER")

    action = entity . addaction ("GET_CONTENTS")
    action . add_parameter ( "CABINET_ID"    , cabinet_id    )
    action . add_parameter ( "FOLDER_NUMBER" , folder_number )
    action . add_parameter ( "PAGE"          , 1             )
    action . add_parameter ( "PAGESIZE"      , 25            )
    action . add_parameter ( "SCHEMA"        , TRUE          )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_explorer_folder_get_content_count( VALUE cabinet_id    ,
                                                      VALUE folder_number )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    entity = limsml . addentity ("EXPLORER_FOLDER")

    action = entity . addaction ("GET_CONTENT_COUNT")
    action . add_parameter ( "CABINET_ID"    , cabinet_id    )
    action . add_parameter ( "FOLDER_NUMBER" , folder_number )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_infomaker_report_get_parameters( VALUE report_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("INFOMAKER_REPORT")

    action = entity . addaction ("GET_PARAMETERS")
    action . add_parameter ( "REPORT_ID", report_id )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_infomaker_report_generate( VALUE report_id, VALUE p1, VALUE p2 )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("INFOMAKER_REPORT")

    action = entity . addaction ("GENERATE")
    action . add_parameter ( "REPORT_ID", report_id )

    IF p1 <> EMPTY THEN
        entity . field_in( "P1", p1 )
    ENDIF

    IF p2 <> EMPTY THEN
        entity . field_in( "P2", p2 )
    ENDIF

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_analysis_get_components( VALUE analysis_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("ANALYSIS")

    action = entity . addaction ("GET_COMPONENTS")
    action . add_parameter ( "ANALYSIS_ID", analysis_id )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_sample_template_get_fields( VALUE template_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("SAMPLE_TEMPLATE")

    action = entity . addaction ("GET_FIELDS")
    action . add_parameter ( "TEMPLATE_ID", template_id )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_sample_template_validate_values_blank

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("SAMPLE_TEMPLATE")

    action = entity . addaction ("VALIDATE_VALUES")
    action . add_parameter ( "TEMPLATE_ID", "BLANK" )

    entity . field_inout( "ID_NUMERIC"   , 123         )
    entity . field_inout( "PROJECT_ID"   , ""          )
    entity . field_inout( "PRODUCT"      , ""          )
    entity . field_inout( "GRADE_CODE"   , ""       )
    entity . field_inout( "BATCH_NAME"   , ""       )
    entity . field_inout( "SAMPLE_NAME"  , ""       )
    entity . field_inout( "DESCRIPTION"  , ""       )
    entity . field_inout( "SAMPLING_POINT"  , ""       )
    entity . field_inout( "SAMPLE_TYPE"  , ""          )
    entity . field_inout( "SAMPLED_DATE" , "15-JAN-2004"  )
    entity . field_inout( "CUSTOMER_ID"  , ""          )
    entity . field_inout( "INVOICE_NUMBER"  , ""          )
    entity . field_inout( "RECD_DATE"    , "15-JAN-2004"          )
    entity . field_inout( "HAZARD"  , ""          )
    entity . field_inout( "LOCATION_ID"  , ""          )
    entity . field_inout( "PREPARATION"  , ""          )
    entity . field_inout( "TEST_SCHEDULE"  , ""          )
    entity . field_inout( "DATERESREQ"  , "15-JAN-2004"          )
    entity . field_inout( "PRIORITY"  , "1"          )
    entity . field_inout( "JOB_NAME"  , ""          )
    entity . field_inout( "INSPECTION_HEADER"  , ""          )
    entity . field_inout( "BATCH_ID"  , ""          )
    entity . field_inout( "TOTAL_ELEMENTS"  , "0"          )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_job_template_validate_values_default

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("JOB_TEMPLATE")

    action = entity . addaction ("VALIDATE_VALUES")
    action . add_parameter ( "TEMPLATE_ID", "DEFAULT" )

    entity . field_inout( "BROWSE_DESCRIPTION" , "Description text" )
    entity . field_inout( "LOT_ID"             , "NOT_EXIST"      )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_job_template_get_fields( VALUE template_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("JOB_TEMPLATE")

    action = entity . addaction ("GET_FIELDS")
    action . add_parameter ( "TEMPLATE_ID", template_id )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_user_login

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("USER")

    entity . addaction ("LOGIN")

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_test_schedule_get_contents( VALUE test_schedule_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("TEST_SCHEDULE")

    action = entity . addaction ("GET_CONTENTS")
    action . add_parameter( "TEST_SCHEDULE_ID" , test_schedule_id )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_user_interface_get_fields( VALUE type_id, VALUE interface_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("USER_INTERFACE")

    action = entity . addaction ("GET_FIELDS")
    action . add_parameter( "TYPE_ID"    , type_id )
    action . add_parameter( "INTERFACE"  , interface_id )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_user_interface_validate_values( VALUE type_id, VALUE interface_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("USER_INTERFACE")

    action = entity . addaction ("VALIDATE_VALUES")
    action . add_parameter ( "TYPE_ID"   , type_id )
    action . add_parameter ( "INTERFACE" , interface_id )

    entity . field_inout( "DESCRIPTION"  , "description"  )
    entity . field_inout( "GROUP_ID"     , "SYSTEM"       )
    entity . field_inout( "NAME"         , "name"         )
    entity . field_inout( "ORDER_NUMBER" , "not a number" )
    entity . field_inout( "ICON"         , "NOT_EXIST"    )

    RETURN( limsml )

ENDROUTINE


{******************************************************************************}

ROUTINE get_limsml_sample_login_request

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action, test_entity

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("SAMPLE")

    action = entity . addaction ("CREATE_BY_TEMPLATE")
    action . add_parameter ( "TEMPLATE", "BLANK" )

    entity . field_out( "ID_NUMERIC" )
    entity . field_in ( "SAMPLED_DATE" , NOW )
    entity . field_inout( "DESCRIPTION" , "Description text" )
    entity . field_inout( "PRIORITY"    , 3 )

    test_entity = entity . addchild ( "TEST" )
    test_entity . field_inout( "ANALYSIS", "PH" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_sample_login_existing_job_request

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action, test_entity

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("SAMPLE")

    action = entity . addaction ("CREATE_BY_TEMPLATE")
    action . add_parameter ( "TEMPLATE", "BLANK" )
    action . add_parameter ( "JOB_NAME", "DEFAULT   .        1" )

    entity . field_out( "ID_NUMERIC" )
    entity . field_inout( "DESCRIPTION" , "sample logged into default.1" )
    entity . field_inout( "PRIORITY"    , 3 )

    test_entity = entity . addchild ( "TEST" )
    test_entity . field_inout( "ANALYSIS", "PH" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_job_login_request

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("JOB")

    action = entity . addaction ("CREATE_BY_TEMPLATE")
    action . add_parameter ( "TEMPLATE", "DEFAULT" )

    entity . field_out( "JOB_NAME" )
    entity . field_inout( "BROWSE_DESCRIPTION" , "New job create from LIMSML" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_infomaker_parameters_validate_values( VALUE report_id )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("INFOMAKER_REPORT")

    action = entity . addaction ("VALIDATE_VALUES")
    action . add_parameter ( "REPORT_ID"   , report_id )

    entity . field_inout( "ARG_1"         , "NOT A DATE"   ) {Enter From           Prompt for DATE(1 00:00:00.0)                        Yes}
    entity . field_inout( "ARG_2"         , NOW            ) {Enter To             Prompt for DATETIME(SOLM)                            Yes}
    entity . field_inout( "ARG_3"         , "SYSTEM"       ) {Enter Operator       Prompt for PERSONNEL.IDENTITY(OPERATOR)              Yes}
    entity . field_inout( "ARG_4"         , "IGNORED"      ) {Enter Date and time  Prompt using $INFOMAKER_TEMP\READONLYDATETIMEPROMPT  Yes}
    entity . field_inout( "INT_FIELD"     , "NOT INT"      ) {Integer field        Prompt for SAMPLE.IDNUMERIC                          No}
    entity . field_inout( "PHRS_FIELD"    , "V"            ) {Phrase Field         Prompt for SAMP_STAT                                 No}
    entity . field_inout( "BOOL_FORMAT"   , "TRUE"         ) {Boolean Field        Prompt for PASSWORD.FROZEN(TRUE)                     No}
    entity . field_inout( "INT_FORMAT"    , "123"          ) {Integer Format       Prompt for INTEGER(123)                              No}
    entity . field_inout( "DATE_FORMA"    , "12-MAY-2000"  ) {Date Format          Prompt for DATE                                      No}
    entity . field_inout( "BROWSE_FK"     , "DRUNKENESS"   ) {FK                   Prompt for SAMPLE.HAZARD                             No}


    RETURN( limsml )

ENDROUTINE
{******************************************************************************}

ROUTINE get_criteria_list( VALUE entity_name )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ("CRITERIA")

    action = entity . addaction ("GET")
    action . add_parameter ( "TABLE_NAME", entity_name )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE add_to_favorites( VALUE type_id, VALUE key0 )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ( type_id )

    action = entity . addaction ("FAVORITES_ADD")
    action . add_parameter ( "KEY0", key0 )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE remove_from_favorites( VALUE type_id, VALUE key0 )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ( type_id )

    action = entity . addaction ("FAVORITES_REMOVE")
    action . add_parameter ( "KEY0", key0 )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE add_adhoc_results( VALUE test_number )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, result_entity

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ( "SAMPLE")

    entity . addaction ("RE_PUT_RESULTS")
    
    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC NUMBER" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "UNITS", "Baume" )
    result_entity . field_in( "RESULT_TYPE", "N" )
    result_entity . field_in( "TEXT", "12" )
    
    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC Text" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "RESULT_TYPE", "T" )
    result_entity . field_in( "TEXT", "Sample Text" )
    
    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC Bool" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "TRUE_WORD", "True" )
    result_entity . field_in( "FALSE_WORD", "False" )
    result_entity . field_in( "RESULT_TYPE", "B" )
    result_entity . field_in( "TEXT", "True" )
    
    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC Char" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "ALLOWED_CHARACTERS", "TEST" )
    result_entity . field_in( "RESULT_TYPE", "C" )
    result_entity . field_in( "TEXT", "T" )
    
    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC Date" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "RESULT_TYPE", "D" )
    result_entity . field_in( "TEXT", "23/12/2004 12:15:59" )

    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC Interval" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "RESULT_TYPE", "I" )
    result_entity . field_in( "TEXT", "   0 01:00:00.00" )
    
    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC Caclulation" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "CALCULATION", "CALC" )

    result_entity . field_in( "RESULT_TYPE", "K" )
    result_entity . field_in( "TEXT", "" )
    

    result_entity = entity . addchild ( "RESULT" )
    result_entity . field_in( "NAME", "AD HOC File" )
    result_entity . field_in( "TEST_NUMBER", test_number )
    result_entity . field_in( "RESULT_TYPE", "F" )
    result_entity . field_in( "TEXT", "C:\test" )
    
    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE Get_RE_Results( VALUE sample_number )

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, result_entity

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( "SAMPLE")

    entity . addaction ("GET_SAMPLE_RE_PROMPTS")
    
    result_entity = entity . addchild ( "SAMPLE" )
    result_entity . field_in( "_KEY0", sample_number )
    
    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE Get_Audits( VALUE test_number, VALUE comp_name)

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( "RESULT")

    action = entity . addaction ("GET_AUDITS")
    
    action . add_parameter ( "TEST_ID"   , test_number )
    action . add_parameter ( "COMPONENT_NAME"   , comp_name )
    
    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE Get_Components( VALUE sample_number, VALUE test_number, VALUE comp_name)

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( "SAMPLE")

    action = entity . addaction ("GET_COMPONENT_LIMITS")
    
    action . add_parameter ( "SAMPLE_ID"   , sample_number )
    action . add_parameter ( "TEST_ID"   , test_number )
    action . add_parameter ( "COMPONENT_NAME"   , comp_name )
    
    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_generic_create

    DECLARE limsml, entity, action, test

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml
    limsml . setresponse ( "SYSTEM" )

    entity = limsml . addentity ("PHRASE")
    action = entity . addaction ("CREATE")

    action . add_parameter ( "IDENTITY", "LIMSML" )
    entity . field_in( "DESCRIPTION", "Created - " : NOW )

    test = entity . addchild ( "PHRASE_ENTRY" )
    test . field_in( "PHRASE_ID", "MAE-1" )
    test . field_in( "PHRASE_TEXT", "Created - " : NOW )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_generic_update

    DECLARE limsml, entity, action, test

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml
    limsml . setresponse ( "SYSTEM" )

    entity = limsml . addentity ("PHRASE")
    action = entity . addaction ("UPDATE")

    action . add_parameter ( "IDENTITY", "LIMSML" )
    entity . field_in( "DESCRIPTION", "Updated Description text - " : NOW )

    test = entity . addchild ( "PHRASE_ENTRY" )
    test . field_in( "PHRASE_ID", "MAE-1" )
    test . field_in( "PHRASE_TEXT", "Updated Entry - " : NOW )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_search

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml
    limsml . setresponse ( "DATA" )

    entity = limsml . addentity ("PHRASE_ENTRY")
    action = entity . addaction ("SEARCH")

    action . add_parameter ( "FILTER_1_PROPERTY", "PHRASE_TEXT" )
    action . add_parameter ( "FILTER_1_OPERATOR", "LIKE"        )
    action . add_parameter ( "FILTER_1_VALUE"   , "%ised%"      )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_search_count

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml
    limsml . setresponse ( "SYSTEM" )

    entity = limsml . addentity ("PHRASE_ENTRY")
    action = entity . addaction ("SEARCH_COUNT")

    action . add_parameter ( "FILTER_1_PROPERTY", "PHRASE_TEXT" )
    action . add_parameter ( "FILTER_1_OPERATOR", "LIKE"        )
    action . add_parameter ( "FILTER_1_VALUE"   , "%ised%"      )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_job_login_with_sample_request

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action_for_job, sample_entity               

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("JOB")

    action_for_job  = entity . addaction ("CREATE_BY_TEMPLATE")
    action_for_job . add_parameter ( "TEMPLATE", "WITH_SAMP" )
    action_for_job . add_parameter ( "IGNORE_SAMPLE_TEMP", "FALSE" )
    
    { Job fields }

    entity . field_out( "JOB_NAME" )
    entity . field_inout( "BROWSE_DESCRIPTION" , "New job create from LIMSML" ) 
    
    { Sample fields }

    sample_entity = entity . addchild ( "SAMPLE" )
    sample_entity . field_out( "ID_NUMERIC" )
    sample_entity . field_in( "DESCRIPTION", "Sample created the same time as job." )
    
    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_job_login_with_sample_and_test_sched_request

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action_for_job, sample_entity, test_entity               

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("JOB")

    action_for_job  = entity . addaction ("CREATE_BY_TEMPLATE")
    action_for_job . add_parameter ( "TEMPLATE", "WITH_SAMP" )
    action_for_job . add_parameter ( "IGNORE_SAMPLE_TEMP", "FALSE" )
    
    { Job fields }

    entity . field_out( "JOB_NAME" )
    entity . field_inout( "BROWSE_DESCRIPTION" , "New job create from LIMSML" )
    
    { Sample fields }
    
    sample_entity = entity . addchild ( "SAMPLE" )
    sample_entity . field_out( "ID_NUMERIC" )
    
    { Test fields }

    test_entity = sample_entity . addchild ( "TEST" )
    test_entity . field_out( "ANALYSIS" )
    test_entity . field_out( "TEST_NUMBER" )
    
    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_job_login_with_sample_and_spec_anal_request

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action_for_job, action_for_sample,
            sample_entity, test_entity1, test_entity2            

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("JOB")

    action_for_job  = entity . addaction ("CREATE_BY_TEMPLATE")
    action_for_job . add_parameter ( "TEMPLATE", "WITH_SAMP" )
    action_for_job . add_parameter ( "IGNORE_SAMPLE_TEMP", "FALSE" )
    
    { Job fields }

    entity . field_out( "JOB_NAME" )
    entity . field_inout( "BROWSE_DESCRIPTION" , "New job create from LIMSML" )
    
    { Sample fields }   

    sample_entity = entity . addchild ( "SAMPLE" )
    
    action_for_sample  = sample_entity . addaction ("CREATE_BY_TEMPLATE")
    {action_for_sample . add_parameter ( "TEMPLATE", "TMP_TEST" )
    action_for_sample . add_parameter ( "REPLICATES", "3" )}
    action_for_sample . add_parameter ( "IGNORE_TEST_SCHEDULE", "TRUE" )
    
    sample_entity . field_out( "ID_NUMERIC" )
    
    { Test 1 fields }

    test_entity1 = sample_entity . addchild ( "TEST" )
    test_entity1 . field_inout( "ANALYSIS", "ANALYSIS01" )
    test_entity1 . field_out( "TEST_NUMBER" )

    { Test 2 fields }

    test_entity2 = sample_entity . addchild ( "TEST" )
    test_entity2 . field_inout( "ANALYSIS", "ANALYSIS02" )
    test_entity2 . field_out( "TEST_NUMBER" )
    
    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE smim_analysis_count

{
* LimsML issued by SMIM to get a count of available analyses
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    entity = limsml . addentity ( "ANALYSIS" )

    action = entity . addaction ("BROWSE_COUNT")
    action . add_parameter ( "FIELD", "IDENTITY" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE smim_analysis_find

{
* LimsML issued by SMIM to get the available analyses
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( "ANALYSIS" )

    action = entity . addaction ("BROWSE")
    
    action . add_parameter ( "PAGE"     , 1          )
    action . add_parameter ( "PAGESIZE" , 100        )
    action . add_parameter ( "FIELD"    , "IDENTITY" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_sample_login_work_flow_request

{
*
*
* Parameters :
*
*******************************************************************************}

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml

    limsml . setresponse ( "SYSTEM" )
    entity = limsml . addentity ("SAMPLE")

    action = entity . addaction ("CREATE_BY_WORKFLOW")
    action . add_parameter ( "WORKFLOW_NAME", "Single Sample" )
    action . add_parameter ( "REPLICATES", "3" )

    entity . field_out( "ID_TEXT" )
    entity . field_out( "ID_NUMERIC" )
    entity . field_inout( "DESCRIPTION" , "Updated after workflow by VGL." )
    entity . field_inout( "PRIORITY"    , 3 )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_generic_run_workflow_request ( VALUE table         , 
                                                  VALUE workflow_name , 
                                                  VALUE replicates    )

    DECLARE limsml, entity, action

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml
    limsml . setresponse ( "DATA" )
    entity = limsml . addentity ( table )
    action = entity . addaction ( "RUN_WORKFLOW" )
    action . add_parameter ( "WORKFLOW_NAME", workflow_name )
    action . add_parameter ( "REPLICATES", replicates )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}

ROUTINE get_limsml_result_entry_workflow_request ( VALUE workflow_name , 
                                                   VALUE analysis      ) 
                                       
    DECLARE limsml, entity, action, test_entity, 
            result_entity1, result_entity2

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml
    limsml . setresponse ( "SYSTEM" )

    entity = limsml . addentity ( "SAMPLE" )

    action = entity . addaction ( "RESULT_ENTRY" )
    action . add_parameter ( "CREATE_SAMPLE_WORKFL", workflow_name )
    action . add_parameter ( "CREATE_SAMPLE", TRUE )
    action . add_parameter ( "CREATE_TESTS", TRUE )
    
    entity . field_out( "ID_NUMERIC" )
    
    test_entity = entity . addchild ( "TEST" )
    test_entity . field_inout( "ANALYSIS", "PH" )
    
    result_entity1 = test_entity . addchild ( "RESULT" )
    result_entity1 . field_in( "NAME", "ph1" )
    result_entity1 . field_in( "RESULT_TYPE", "N" )
    result_entity1 . field_in( "TEXT", "12" )
    
    result_entity2 = test_entity . addchild ( "RESULT" )
    result_entity2 . field_in( "NAME", "a" )
    result_entity2 . field_in( "RESULT_TYPE", "N" )
    result_entity2 . field_in( "TEXT", "99" )

    RETURN( limsml )

ENDROUTINE

{******************************************************************************}
{******************************************************************************}
{******************************************************************************}


{******************************************************************************}
ROUTINE get_limsml_tommy
                                       
    DECLARE limsml, entity, action, test_entity

    CREATE OBJECT HELPER_RICHDOCUMENT, limsml
    limsml . setresponse ( "SYSTEM" )

    entity = limsml . addentity ( "SAP_TRANSFER" )

    action = entity . addaction ( "BATCH_INFO" )
    action . add_parameter ( "MATERIALID", "EMMA" )
    
    test_entity = entity . addchild ( "BATCH_CLASS" )
    test_entity . field_in ( "UNITWEIGHT" , "184,20 g" )
    
    
    RETURN( limsml )

ENDROUTINE 

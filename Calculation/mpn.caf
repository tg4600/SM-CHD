
{ This definition is required at the top of all calculations }
GLOBAL ROUTINE calculation(current_sample,
			   current_test_number,
			   current_component_name)

JOIN LIBRARY TOOLBOX
JOIN LIBRARY $LIB_UTILS

ARRAY   res_arr

calcresult = EMPTY

IF   NOT ( get_solution_parameters ( current_component_name, N, Q, L, mess ) )
THEN flash_message("Error in setup. ":mess,TRUE)
     return ( EMPTY )
ENDIF

IF   NOT ( find_results ( current_test_number, res_arr, n_res ) )
THEN flash_message("No results entered", TRUE)
     return ( EMPTY )
ENDIF

IF   NOT ( get_component_row ( current_component_name, res_arr, n_res, c_row ))
THEN flash_message("ERROR: This component:":current_component_name:
                   " does not exist",TRUE)
     return ( EMPTY )
ENDIF

IF   c_row < 2
THEN flash_message("Error in setup. This component cannot be the first",TRUE)
     return( EMPTY )
ENDIF

res = res_arr[c_row-1, result_valu_pos]
IF   res = EMPTY
THEN flash_message("Error: Missing result on:":
                    res_arr[c_row-1, result_name_pos],TRUE)
     return ( EMPTY )
ENDIF

IF   trunc(res) <> res
THEN flash_message("Error: Entered result must not have decimal points",TRUE)
     return ( EMPTY )
ENDIF

fac = L/(N*Q)
IF     res < 0
THEN   flash_message("Error: Entered result:":
                      strip(res):" less than 0",TRUE)
ELSEIF res > N
THEN   flash_message("Error: Entered result:":
                      strip(res):" greater than max allowed:":strip(N),TRUE)
ELSEIF res = 0
THEN   calcresult = "<":strip(fac)
ELSE   calcresult = res * fac
ENDIF

{ The next two lines are required at the end of the calculation }
return(calcresult) { The calculated result is returned here }
ENDROUTINE

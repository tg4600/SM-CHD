
{ This definition is required at the top of all calculations }

{**NEW 1619, HBe 10-5-2005: Calculation format that calculates the difference in percent of the results in the two lines
                            immediately above the calculation. The component line MUST contain a number at the end, this
                            specifies the maximum allowed deviation of the two results in percent of the mean value. 
                            If the deviation exceeds the mean value, NEWTEST is returned, and a NEWTEST is assigned to 
                            the sample.}
                            
GLOBAL ROUTINE calculation(current_sample,
			   current_test_number,
			   current_component_name)

{ Routine to make calculations for Natriumformiat               }

SET COMPILE_OPTION DECLARE

JOIN LIBRARY $LIB_UTILS
JOIN LIBRARY TOOLBOX

DECLARE result_array, std_comp_arr, calcresult, row_num, val1, val2, max_dif, number_of_res, reason_code

ARRAY   result_array
ARRAY   std_comp_arr

calcresult    = "ERROR"
number_of_res = EMPTY

IF get_endstring_parameters( current_component_name,1,TRUE, TRUE, std_comp_arr ) 
THEN
   max_dif = std_comp_arr[1,1]
   IF NUMTEXT(max_dif) THEN
      IF find_results( current_test_number, result_array, number_of_res )
      THEN
         IF GET_COMPONENT_ROW(current_component_name, result_array, number_of_res, row_num)
         THEN
            IF (row_num >= 3) THEN
               IF NUMTEXT(result_array[row_num - 1, result_text_pos]) AND NUMTEXT(result_array[row_num - 2, result_text_pos])
               THEN
                  val1 = NUMERIC(result_array[row_num - 1, result_text_pos])
                  val2 = NUMERIC(result_array[row_num - 2, result_text_pos])
                  calcresult = (ABS(val1 - val2)) * 100 / ((val1 + val2)/2)
                  IF calcresult > max_dif THEN
                     calcresult = "NEWTEST"
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDIF
   ENDIF
ENDIF

IF   calcresult = "NEWTEST"
THEN 
     reason_code = "RES-FAIL"
     IF   NOT (do_newtest( current_test_number,
                           current_component_name, calcresult, reason_code ))
     THEN calcresult = EMPTY
     ENDIF
ENDIF

{ The next two lines are required at the end of the calculation }
return(calcresult) { The calculated result is returned here }
ENDROUTINE
